import{_ as n,e as s}from"./app.fc2879aa.js";var a="/blog/images/JS_img/image-20201125152606923.png",p="/blog/images/JS_img/image-20201125153048804.png";const t={},o=s(`<h1 id="js-\u2014-\u96C6\u5408\u5F15\u7528\u7C7B\u578B\u4E0E\u8FED\u4EE3\u5668\u3001\u751F\u6210\u5668" tabindex="-1"><a class="header-anchor" href="#js-\u2014-\u96C6\u5408\u5F15\u7528\u7C7B\u578B\u4E0E\u8FED\u4EE3\u5668\u3001\u751F\u6210\u5668" aria-hidden="true">#</a> JS \u2014 \u96C6\u5408\u5F15\u7528\u7C7B\u578B\u4E0E\u8FED\u4EE3\u5668\u3001\u751F\u6210\u5668</h1><h2 id="object" tabindex="-1"><a class="header-anchor" href="#object" aria-hidden="true">#</a> Object</h2><p>\u521B\u5EFA\u5BF9\u8C61\u7684\u4E24\u79CD\u65B9\u5F0F\uFF1A</p><ol><li>\u901A\u8FC7new\u5173\u952E\u5B57 + Object\u6784\u9020\u51FD\u6570</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  obj<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&#39;dancer&#39;</span><span class="token punctuation">;</span>
  obj<span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// {name: &quot;dancer&quot;, age: 20}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ol start="2"><li>\u901A\u8FC7\u5BF9\u8C61\u5B57\u9762\u91CF\u7684\u5F62\u5F0F\uFF08==\u8FD9\u79CD\u65B9\u5F0F\u5E76\u4E0D\u4F1A\u5B9E\u9645\u8C03\u7528Object\u6784\u9020\u51FD\u6570==\uFF09</li></ol><p>\u8C03\u7528\u5BF9\u8C61\u7684\u5C5E\u6027\u65F6\uFF0C\u53EF\u4EE5\u901A\u8FC7<strong>\u70B9\u8BED\u6CD5</strong>\u4E0E<strong>\u4E2D\u62EC\u53F7\u8BED\u6CD5</strong>\u6765\u8C03\u7528</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">let</span> person <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;leo&#39;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;age&quot;</span><span class="token operator">:</span> <span class="token number">19</span><span class="token punctuation">,</span>
    <span class="token number">5</span><span class="token operator">:</span> <span class="token string">&#39;number type&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span><span class="token string">&quot;skills&quot;</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token string">&#39;fly in the sky&#39;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>person<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// {5: &quot;number type&quot;, name: &quot;leo&quot;, age: 19, skills: &quot;fly in the sky&quot;}</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>person<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// leo </span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>person<span class="token punctuation">.</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 19</span>

  <span class="token comment">// \u70B9\u8BED\u6CD5 \u4E0E \u4E2D\u62EC\u53F7\u8BED\u6CD5</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>person<span class="token punctuation">.</span>skills<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// fly in the sky</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>person<span class="token punctuation">[</span><span class="token string">&quot;skills&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// fly in the sky</span>

  <span class="token comment">// \u8FD9\u91CC\u76845\u4F1A\u81EA\u52A8\u8F6C\u5316\u4E3AString\u7C7B\u578B</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>person<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// number type</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>person<span class="token punctuation">[</span><span class="token string">&quot;5&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// number type</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h2 id="array" tabindex="-1"><a class="header-anchor" href="#array" aria-hidden="true">#</a> Array</h2><h3 id="from-\u548Cof" tabindex="-1"><a class="header-anchor" href="#from-\u548Cof" aria-hidden="true">#</a> from()\u548Cof()</h3><blockquote><p>from()\u7528\u4E8E\u5C06<strong>\u7C7B\u6570\u7EC4</strong>\u7ED3\u6784\u8F6C\u6362\u4E3A<strong>\u6570\u7EC4</strong>\u5B9E\u4F8B</p></blockquote><ul><li>from()\u65B9\u6CD5\u7684\u7B2C\u4E00\u4E2A\u53C2\u6570\u662F\u4F20\u5165\u4E00\u4E2A\u53EF\u8FED\u4EE3\u5BF9\u8C61</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token comment">/* 
    \u56E0\u4E3Astr\u7684\u539F\u578B\u5BF9\u8C61\u4E2D\u542B\u6709Symbol(Symbol.iterator)
    \u5C5E\u6027\uFF0C\u6240\u4EE5str\u662F\u53EF\u8FED\u4EE3\u5BF9\u8C61
  */</span>
  <span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span><span class="token string">&#39;leo&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// String{&quot;leo&quot;}</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// [&quot;l&quot;,&quot;e&quot;,&quot;o&quot;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// Map\u548CSet\u90FD\u5C5E\u4E8E\u7C7B\u6570\u7EC4\u5BF9\u8C61(\u6216\u8005\u8BF4\u53EF\u8FED\u4EE3\u5BF9\u8C61) </span>
<span class="token keyword">let</span> m <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;leo&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;age&#39;</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">let</span> s <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&#39;great&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&#39;amazing&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&#39;excellent&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// [[&quot;name&quot;, &quot;leo&quot;],[&quot;age&quot;, 20]]</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// [&quot;great&quot;, &quot;amazing&quot;, &quot;excellent&quot;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><ul><li>from()\u8FD8\u63A5\u6536\u7B2C\u4E8C\u4E2A\u53EF\u9009\u7684\u6620\u5C04\u51FD\u6570\u53C2\u6570\u3002\u8FD9\u4E2A\u51FD\u6570\u53EF\u4EE5<strong>\u76F4\u63A5\u589E\u5F3A\u65B0\u6570\u7EC4\u5143\u7D20\u4E2D\u7684\u6BCF\u4E00\u4E2A\u503C</strong>\uFF0C\u800C\u65E0\u9700\u50CF\u8C03\u7528Array.from().map()\u90A3\u6837\u5148\u521B\u5EFA\u4E00\u4E2A\u4E2D\u95F4\u6570\u7EC4\u3002</li><li>\u8FD8\u53EF\u4EE5\u63A5\u6536\u7B2C\u4E09\u4E2A\u53EF\u9009\u53C2\u6570\uFF0C\u7528\u4E8E\u6307\u5B9A\u6620\u5C04\u51FD\u6570\u4E2Dthis\u7684\u503C\u3002\u4F46\u662F<strong>\u8FD9\u4E2A\u91CD\u5199\u7684this\u503C\u5728\u7BAD\u5934\u51FD\u6570\u4E2D\u4E0D\u9002\u7528</strong></li></ul><blockquote><p>of()\u7528\u4E8E\u5C06\u4E00\u7EC4\u53C2\u6570\u8F6C\u6362\u4E3A\u6570\u7EC4\u5B9E\u4F8B</p></blockquote><p>\u8FD9\u4E2A\u65B9\u6CD5\u66FF\u4EE3\u4E86\u5728ES6\u4E4B\u524D\u5E38\u7528\u7684Array.prototype.slice.call(arguments)\uFF0C\u4E00\u79CD\u7B28\u62D9\u7684\u5C06arguments\u5BF9\u8C61\u8F6C\u6362\u4E3A\u6570\u7EC4\u7684\u5199\u6CD5</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// [1, 2, 3, 4]</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// [undefined]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="\u6307\u4EE3\u5E42" tabindex="-1"><a class="header-anchor" href="#\u6307\u4EE3\u5E42" aria-hidden="true">#</a> ** \u6307\u4EE3\u5E42</h3><p>\u8BB0\u5F55\u4E00\u4E2A\u5C0F\u7684\u77E5\u8BC6\u70B9\uFF0C**\u662F\u6307\u51E0\u6B21\u5E42</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>
  x <span class="token operator">=</span> x <span class="token operator">**</span> <span class="token number">3</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// 27</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="\u68C0\u6D4B\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u68C0\u6D4B\u6570\u7EC4" aria-hidden="true">#</a> \u68C0\u6D4B\u6570\u7EC4</h3><p>\u5728\u53EA\u6709\u4E00\u4E2A\u7F51\u9875\uFF08\u56E0\u800C\u53EA\u6709\u4E00\u4E2A\u5168\u5C40\u4F5C\u7528\u57DF\uFF09\u7684\u60C5\u51B5\u4E0B\uFF0C\u4F7F\u7528instanceof\u64CD\u4F5C\u7B26\u8DB3\u77E3\uFF1B\u4F46\u662F\u5BF9\u4E8E\u7F51\u9875\u4E2D\u5B58\u5728\u591A\u4E2A\u6846\u67B6\uFF0C\u5219\u53EF\u80FD\u6D89\u53CA\u4E0D\u540C\u7684\u5168\u5C40\u6267\u884C\u4E0A\u4E0B\u6587\uFF0C\u56E0\u6B64\u5C31\u4F1A\u6709\u4E24\u4E2A\u4E0D\u540C\u7248\u672C\u7684Array\u6784\u9020\u51FD\u6570\uFF0C\u6240\u4EE5\u6211\u4EEC\u4F7F\u7528Array.isArray()\u65B9\u6CD5</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> res_1 <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// \u9488\u5BF9\u5B58\u5728\u5355\u4E2A\u5168\u5C40\u6267\u884C\u4E0A\u4E0B\u6587</span>
  <span class="token keyword">let</span> res_2 <span class="token operator">=</span> obj <span class="token keyword">instanceof</span> <span class="token class-name">Array</span><span class="token punctuation">;</span> 
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res_1<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// false</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res_2<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="\u8FED\u4EE3\u5668\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u8FED\u4EE3\u5668\u65B9\u6CD5" aria-hidden="true">#</a> \u8FED\u4EE3\u5668\u65B9\u6CD5</h3><p>ES6\u4E2D\uFF0C==Array\u7684\u539F\u578B==\u4E0A\u66B4\u9732\u4E863\u4E2A\u7528\u4E8E\u68C0\u7D22\u6570\u7EC4\u5185\u5BB9\u7684\u65B9\u6CD5\uFF1Akeys()\u3001values()\u3001entries()\uFF1B==\u9664\u6B64\u4E4B\u5916Set\u4E0EMap\u7684\u539F\u578B\u4E0A\u4E5F\u66B4\u9732\u4E86\u8FD9\u4E09\u4E2A\u65B9\u6CD5==</p><p>keys()\uFF1A\u8FD4\u56DE\u6570\u7EC4\u7D22\u5F15\u7684\u8FED\u4EE3\u5668</p><p>values()\uFF1A\u8FD4\u56DE\u6570\u7EC4\u5143\u7D20\u7684\u8FED\u4EE3\u5668</p><p>entries()\uFF1A\u8FD4\u56DE\u7D22\u5F15/\u503C\u5BF9\u7684\u8FED\u4EE3\u5668</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;leo&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;sheng&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;kang&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;lei&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> aKeys <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> aValues <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> aEntries <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>aKeys<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// [0, 1, 2, 3]</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>aValues<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// [&quot;leo&quot;, &quot;sheng&quot;, &quot;kang&quot;, &quot;lei&quot;]</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>aEntries<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//  [ [0, &quot;leo&quot;],[1, &quot;sheng&quot;],[2, &quot;kang&quot;],[3, &quot;lei&quot;]]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u4F7F\u7528ES6\u89E3\u6784\u975E\u5E38\u5BB9\u6613\u7684\u62C6\u5206\u952E/\u503C\u5BF9</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;leo&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;sheng&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;kang&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;lei&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> <span class="token punctuation">[</span>key_id<span class="token punctuation">,</span>value_con<span class="token punctuation">]</span> <span class="token keyword">of</span> arr<span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>key_id<span class="token punctuation">,</span>value_con<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// 0 &quot;leo&quot;</span>
  <span class="token comment">// 1 &quot;sheng&quot;</span>
  <span class="token comment">// 2 &quot;kang&quot;</span>
  <span class="token comment">// 3 &quot;lei&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="\u8F6C\u6362\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u8F6C\u6362\u65B9\u6CD5" aria-hidden="true">#</a> \u8F6C\u6362\u65B9\u6CD5</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;leo&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;sheng&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;kang&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;lei&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> arr<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// string</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> arr<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// object</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> arr<span class="token punctuation">.</span><span class="token function">toLocaleString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// string</span>

  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token comment">// leo,sheng,kang,lei</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// [&quot;leo&quot;, &quot;sheng&quot;, &quot;kang&quot;, &quot;lei&quot;]</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">toLocaleString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// leo,sheng,kang,lei</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>                  <span class="token comment">// [&quot;leo&quot;, &quot;sheng&quot;, &quot;kang&quot;, &quot;lei&quot;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="\u6392\u5E8F\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u6392\u5E8F\u65B9\u6CD5" aria-hidden="true">#</a> \u6392\u5E8F\u65B9\u6CD5</h3><p>reverse()\uFF1A\u53CD\u8F6C\u6570\u7EC4</p><p>sort()\uFF1A\u6392\u5E8F\u6570\u7EC4</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">,</span><span class="token number">77</span><span class="token punctuation">,</span><span class="token number">34</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// [34, 77, 23, 11]</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span>b</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span>a<span class="token operator">-</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u5347\u5E8F [11, 23, 34, 77]</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span>b</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span>b<span class="token operator">-</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u964D\u5E8F [77, 34, 23, 11] </span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="\u8FED\u4EE3\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u8FED\u4EE3\u65B9\u6CD5" aria-hidden="true">#</a> \u8FED\u4EE3\u65B9\u6CD5</h3><ul><li>every()</li><li>filter()</li><li>forEach()</li><li>map()</li><li>some()</li></ul><blockquote><p>every() \u4E0E some()</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token comment">// \u904D\u5386\u6570\u7EC4\u4E2D\u6BCF\u4E00\u4E2A\u5143\u7D20\uFF0C\u5982\u679C\u90FD&gt;2\uFF0C\u5219\u8FD4\u56DEtrue\uFF0C\u5426\u5219\u8FD4\u56DEfalse</span>
  <span class="token keyword">let</span> res <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">every</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span>index<span class="token punctuation">,</span>array</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> value <span class="token operator">&gt;</span> <span class="token number">2</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// false</span>

  <span class="token comment">// \u904D\u5386\u6570\u7EC4\u4E2D\u6BCF\u4E00\u4E2A\u5143\u7D20\uFF0C\u5982\u679C\u6709\u81F3\u5C11\u4E00\u4E2A&gt;2\uFF0C\u5219\u8FD4\u56DEtrue\uFF0C\u5426\u5219\u8FD4\u56DEfalse</span>
  <span class="token keyword">let</span> back <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">some</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span>index<span class="token punctuation">,</span>array</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> value <span class="token operator">&gt;</span> <span class="token number">2</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>back<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h2 id="map" tabindex="-1"><a class="header-anchor" href="#map" aria-hidden="true">#</a> Map</h2><h3 id="\u57FA\u672Capi" tabindex="-1"><a class="header-anchor" href="#\u57FA\u672Capi" aria-hidden="true">#</a> \u57FA\u672CAPI</h3><p>\u53EF\u4EE5\u7ED9Map\u6784\u9020\u51FD\u6570\u4F20\u5165\u4E00\u4E2A\u53EF\u8FED\u4EE3\u5BF9\u8C61</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">const</span> m <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
    <span class="token punctuation">[</span><span class="token string">&#39;key1&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;val_1&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span><span class="token string">&#39;key2&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;val_2&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>m<span class="token punctuation">.</span>size<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u5BF9\u4E8E\u57FA\u672C\u5C5E\u6027\u4E0E\u65B9\u6CD5\u7684\u4F7F\u7528\uFF1Aget()\u3001has()\u3001delete()\u3001clear()</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">const</span> m <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  m<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;leo&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;age&#39;</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;skill&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;front&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>m<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// true</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>m<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;age&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 20</span>

  <span class="token comment">// \u5220\u9664\u96C6\u5408\u4E2D\u5143\u7D20</span>
  m<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token string">&#39;skill&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>m<span class="token punctuation">.</span>size<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 2 </span>

  <span class="token comment">// \u6E05\u9664\u6574\u4E2AMap\u96C6\u5408</span>
  m<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>m<span class="token punctuation">.</span>size<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><ul><li>==\u4E0EObject\u53EA\u80FD\u4F7F\u7528\u6570\u7EC4\u3001\u5B57\u7B26\u4E32\u6216\u7B26\u53F7\u4F5C\u4E3A\u952E\u4E0D\u540C\uFF0CMap\u53EF\u4EE5\u4F7F\u7528\u4EFB\u4F55JavaScript\u6570\u636E\u7C7B\u578B\u4F5C\u4E3A\u952E==</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">const</span> m <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">let</span> boolKey <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> objKey <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> <span class="token function-variable function">funcKey</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

  m<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>boolKey<span class="token punctuation">,</span><span class="token string">&#39;bool_val&#39;</span><span class="token punctuation">)</span>
   <span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>objKey<span class="token punctuation">,</span><span class="token string">&#39;obj_val&#39;</span><span class="token punctuation">)</span>
   <span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>funcKey<span class="token punctuation">,</span><span class="token string">&#39;func_val&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token keyword">of</span> m<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// true</span>
  <span class="token comment">// {}</span>
  <span class="token comment">// f() {}</span>

  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> val <span class="token keyword">of</span> m<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// bool_val</span>
  <span class="token comment">// obj_val</span>
  <span class="token comment">// func_val</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><blockquote><p>\u5BF9Map\u96C6\u5408\u4E2D\u7684\u540C\u4E00\u952E\u503Ckey\u91CD\u590D\u8D4B\u503C</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">const</span> m <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  m<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;leo&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;age&#39;</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;skill&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;front&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>m<span class="token punctuation">.</span>size<span class="token punctuation">)</span><span class="token punctuation">;</span>

  m<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;new_leo&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> val <span class="token keyword">of</span> m<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// new_leo</span>
  <span class="token comment">// 20</span>
  <span class="token comment">// front</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>\u7ED3\u679C\uFF1A==\u5BF9Map\u96C6\u5408\u4E2D\u7684\u540C\u4E00\u952E\u503Ckey\u91CD\u590D\u8D4B\u503C\u4F1A\u8986\u76D6\u4E4B\u524D\u7684\u7ED3\u679C==</p><h3 id="object\u4E0Emap\u7684\u6BD4\u8F83" tabindex="-1"><a class="header-anchor" href="#object\u4E0Emap\u7684\u6BD4\u8F83" aria-hidden="true">#</a> Object\u4E0EMap\u7684\u6BD4\u8F83</h3><p>\u5728JS\u4E2D\u5B9E\u73B0 &quot;\u952E\u503C\u5BF9&quot; \u5F0F\u5B58\u50A8\u53EF\u4EE5\u4F7F\u7528Object\u65B9\u4FBF\u9AD8\u6548\u7684\u5B8C\u6210\uFF0C\u4E5F\u5C31\u662F\u4F7F\u7528\u5BF9\u8C61\u7684\u5C5E\u6027\u4F5C\u4E3A\u952E\uFF0C\u518D\u4F7F\u7528\u5C5E\u6027\u6765\u5F15\u7528\u503C\u3002</p><p>\u4F5C\u4E3AES6\u7684\u65B0\u589E\u7279\u6027\uFF0CMap\u662F\u4E00\u79CD\u65B0\u7684\u96C6\u5408\u7C7B\u578B\uFF0CMap\u7684\u5927\u591A\u6570\u7279\u6027\u53EF\u4EE5\u901A\u8FC7Object\u5B9E\u73B0\uFF0C\u4F46\u662F\u4E8C\u8005\u8FD8\u662F\u5B58\u5728\u4E00\u4E9B\u7EC6\u5FAE\u7684\u5DEE\u5F02\u3002</p><ul><li>\u5185\u5B58\u5360\u7528</li></ul><p>\u5728\u7ED9\u5B9A\u56FA\u5B9A\u5927\u5C0F\u7684\u5185\u5B58\uFF0CMap\u5927\u7EA6\u53EF\u4EE5\u6BD4Object\u591A\u5B58\u50A850%\u7684\u952E\u503C\u5BF9\uFF08==Map\u66F4\u597D==\uFF09</p><ul><li>\u63D2\u5165\u6027\u80FD</li></ul><p>\u5F53\u4EE3\u7801\u6D89\u53CA\u5927\u91CF\u63D2\u5165\u64CD\u4F5C\u65F6\uFF0CMap\u66F4\u4F18\uFF08==Map\u66F4\u597D==\uFF09</p><ul><li>\u67E5\u627E\u901F\u5EA6</li></ul><p>\u5F53\u4EE3\u7801\u6D89\u53CA\u5927\u91CF\u67E5\u627E\u64CD\u4F5C\u65F6\uFF0CObject\u66F4\u4F18\uFF08==Object\u66F4\u597D==\uFF09</p><ul><li>\u5220\u9664\u6027\u80FD</li></ul><p>\u5F53\u4EE3\u7801\u6D89\u53CA\u5927\u91CF\u5220\u9664\u64CD\u4F5C\u65F6\uFF0CMap\u66F4\u4F18\uFF08==Map\u66F4\u597D==\uFF09</p><h2 id="set" tabindex="-1"><a class="header-anchor" href="#set" aria-hidden="true">#</a> Set</h2><p>Set\u5728\u5F88\u591A\u65B9\u9762\u90FD\u50CF\u662F\u52A0\u5F3A\u7684Map</p><h3 id="\u57FA\u672Capi-1" tabindex="-1"><a class="header-anchor" href="#\u57FA\u672Capi-1" aria-hidden="true">#</a> \u57FA\u672CAPI</h3><p>\u521B\u5EFA\u5BF9\u8C61\u7684\u540C\u65F6\u5E76\u521D\u59CB\u5316\u5B9E\u4F8B\uFF0C\u53EF\u4EE5\u901A\u8FC7\u7ED9Set\u6784\u9020\u51FD\u6570\u4F20\u5165\u4E00\u4E2A\u53EF\u8FED\u4EE3\u5BF9\u8C61</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">const</span> s <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;leo&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;brose&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;jordan&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>size<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>add()\uFF1A\u589E\u52A0\u503C</p><p>has()\uFF1A\u67E5\u8BE2</p><p>delete()\uFF1A\u5220\u9664\u5355\u4E2A\u5143\u7D20</p><p>clear()\uFF1A\u6E05\u9664\u6574\u4E2A\u96C6\u5408\u5143\u7D20</p><p>size\uFF1A\u83B7\u53D6\u5143\u7D20\u6570\u91CF</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">const</span> s <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;leo&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;brose&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;jordan&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  s<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>size<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 0</span>

  s<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&#39;kang&#39;</span><span class="token punctuation">)</span>
   <span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&#39;sheng&#39;</span><span class="token punctuation">)</span>
   <span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span><span class="token string">&#39;kang&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// true </span>

  s<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token string">&#39;sheng&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>size<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 2</span>

  s<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&#39;kang&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// \u6B64\u65F6\u96C6\u5408\u4E2D\u5DF2\u7ECF\u5728\u8FD9\u4E2A\u503C</span>

  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>size<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 2  \u8868\u660ESet\u96C6\u5408\u4E0D\u4F1A\u5B58\u50A8\u6DFB\u52A0\u76F8\u540C\u7684\u503C</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p>\u8FD9\u91CC\u9700\u8981\u6CE8\u610F\u7684\u662F\uFF1A==Set\u96C6\u5408\u662F\u4E0D\u4F1A\u5B58\u50A8\u91CD\u590D\u7684\u503C==</p><h3 id="\u987A\u5E8F\u4E0E\u8FED\u4EE3" tabindex="-1"><a class="header-anchor" href="#\u987A\u5E8F\u4E0E\u8FED\u4EE3" aria-hidden="true">#</a> \u987A\u5E8F\u4E0E\u8FED\u4EE3</h3><p>Set\u4F1A\u7EF4\u62A4\u63D2\u5165\u65F6\u987A\u5E8F\uFF0C\u56E0\u6B64\u652F\u6301\u6309\u987A\u5E8F\u8FED\u4EE3</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">const</span> s <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;leo&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;brose&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;jordan&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// \u8FD9\u91CC\u7684\u8FED\u4EE3\u5BF9\u8C61\u4E0D\u8BBA\u662Fs.values()\u8FD8\u662Fs.keys(),\u8FD4\u56DE\u7ED3\u679C\u76F8\u540C</span>
  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> ele <span class="token keyword">of</span> s<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>ele<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// leo</span>
  <span class="token comment">// brose</span>
  <span class="token comment">// jordan</span>

  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> ent <span class="token keyword">of</span> s<span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>ent<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// [&quot;leo&quot;, &quot;leo&quot;]  </span>
  <span class="token comment">// [&quot;brose&quot;, &quot;brose&quot;]</span>
  <span class="token comment">// [&quot;jordan&quot;, &quot;jordan&quot;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h2 id="\u8FED\u4EE3\u5668\u65B9\u6CD5\u4E0E\u8FED\u4EE3\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u8FED\u4EE3\u5668\u65B9\u6CD5\u4E0E\u8FED\u4EE3\u65B9\u6CD5" aria-hidden="true">#</a> \u8FED\u4EE3\u5668\u65B9\u6CD5\u4E0E\u8FED\u4EE3\u65B9\u6CD5</h2><h3 id="\u8FED\u4EE3\u5668" tabindex="-1"><a class="header-anchor" href="#\u8FED\u4EE3\u5668" aria-hidden="true">#</a> \u8FED\u4EE3\u5668</h3><p>==\u6CE8\u610F\uFF1A\u4E0D\u662F\u8BF4Array\u3001Arguments\u3001Set\u7B49\u5C31\u662F\u8FED\u4EE3\u5668\uFF0C\u4ED6\u4EEC\u53EA\u662F\u4E0D\u540C\u7684\u6570\u636E\u7ED3\u6784\uFF0C\u800C\u8FED\u4EE3\u5668\u53EA\u662F\u4E00\u79CD\u63A5\u53E3\uFF0C\u5F53\u8FD9\u4E9B\u6570\u636E\u7ED3\u6784\u5B9E\u73B0\u4E86\u8FD9\u4E2A\u63A5\u53E3\uFF0C\u4ED6\u4EEC\u5C31\u5177\u6709\u8FED\u4EE3\u7684\u80FD\u529B\u3002==</p><img src="`+a+'" alt="image-20201125152606923" style="zoom:67%;"><img src="'+p+`" alt="image-20201125153048804" style="zoom:67%;"><h4 id="\u53EF\u8FED\u4EE3\u534F\u8BAE" tabindex="-1"><a class="header-anchor" href="#\u53EF\u8FED\u4EE3\u534F\u8BAE" aria-hidden="true">#</a> \u53EF\u8FED\u4EE3\u534F\u8BAE</h4><p>\u53EF\u4EE5\u901A\u8FC7<strong>\u68C0\u67E5\u5B9E\u4F8B\u7684[Symbol.iterator]\u5C5E\u6027</strong>\uFF0C\u6765\u5224\u65AD\u662F\u5426\u5B58\u5728\u9ED8\u8BA4\u8FED\u4EE3\u5668\u5C5E\u6027\uFF08<strong>\u4E5F\u5C31\u662F\u5224\u65AD\u662F\u5426\u5B9E\u73B0\u4E86\u8FED\u4EE3\u5668\u63A5\u53E3</strong>\uFF09</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> set <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// \u5F53\u7136\u8FD8\u6709\u4E00\u4E9BNodeList\u7B49DOM\u96C6\u5408\u7C7B\u578B</span>

  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u0192 values() { [native code] }</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u0192 [Symbol.iterator]() { [native code] }</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>map<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u0192 entries() { [native code] }</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">set</span><span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u0192 values() { [native code] }</span>

  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u8FD4\u56DE\u8FED\u4EE3\u5668 Array Iterator {}</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u8FD4\u56DE\u8FED\u4EE3\u5668 StringIterator {}</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>map<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u8FD4\u56DE\u8FED\u4EE3\u5668 MapIterator {}</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">set</span><span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u8FD4\u56DE\u8FED\u4EE3\u5668 SetIterator {}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><blockquote><p>\u5982\u679C\u5BF9\u8C61\u539F\u578B\u94FE\u4E0A\u7684\u7236\u7C7B\u5B9E\u73B0\u4E86Iterable\u63A5\u53E3\uFF0C\u90A3\u8FD9\u4E2A\u5BF9\u8C61\u4E5F\u5C31\u5B9E\u73B0\u4E86\u8FD9\u4E2A\u63A5\u53E3</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">class</span> <span class="token class-name">SonArray</span> <span class="token keyword">extends</span> <span class="token class-name">Array</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token keyword">let</span> son_arr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SonArray</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">,</span><span class="token number">34</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">/* \u5305\u542B[Symbol.iterator]\u5C5E\u6027 */</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>son_arr<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__proto__<span class="token punctuation">.</span>__proto__<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// {Symbol(Symbol.iterator): \u0192}</span>

  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> ele <span class="token keyword">of</span> son_arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>ele<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// 11</span>
  <span class="token comment">// 23</span>
  <span class="token comment">// 34</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><ul><li>==\u8FED\u4EE3\u5668\u7EF4\u62A4\u7740\u4E00\u4E2A\u6307\u5411\u53EF\u8FED\u4EE3\u5BF9\u8C61\u7684\u5F15\u7528\uFF0C\u56E0\u6B64\u8FED\u4EE3\u5668\u4F1A\u963B\u6B62\u5783\u573E\u56DE\u6536\u7A0B\u5E8F\u56DE\u6536\u53EF\u8FED\u4EE3\u5BF9\u8C61==</li></ul><h4 id="\u8FED\u4EE3\u5668\u534F\u8BAE" tabindex="-1"><a class="header-anchor" href="#\u8FED\u4EE3\u5668\u534F\u8BAE" aria-hidden="true">#</a> \u8FED\u4EE3\u5668\u534F\u8BAE</h4><blockquote><p><strong>\u4E3A\u4EC0\u4E48\u5B9E\u73B0\u4E86\u8FED\u4EE3\u5668\u63A5\u53E3\u5C31\u53EF\u4EE5\u5177\u6709\u904D\u5386\u7684\u80FD\u529B\u5462\uFF1F</strong></p></blockquote><p><strong>\u6211\u4EEC\u901A\u8FC7\u67E5\u770B\u5B9E\u4F8B\u7684<a href="">Symbol.iterator</a>\u65B9\u6CD5\u7684\u8FD4\u56DE\u503C\uFF0C\u53EF\u4EE5\u53D1\u73B0\u8FD4\u56DE\u7684\u8FED\u4EE3\u5668\u5BF9\u8C61\u7684\u539F\u578B\u5BF9\u8C61\u4E0A\u5B9E\u73B0\u4E86next()\u624D\u4F7F\u5F97\u6570\u636E\u7ED3\u6784\u5177\u6709\u4E86\u8FED\u4EE3\u7684\u80FD\u529B\uFF08\u540E\u9762\u6709\u901A\u8FC7next()\u81EA\u5B9A\u4E49\u5B9E\u73B0\u8FED\u4EE3\u5668\u65B9\u5F0F\uFF09</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> iter <span class="token operator">=</span> arr<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>iter<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// Array Iterator {}</span>

  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>iter<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// {value: 12, done: false}</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>iter<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// {value: 23, done: false}</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>iter<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// {value: undefined, done: true}</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>iter<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// {value: undefined, done: true}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><blockquote><p>\u5982\u679C\u53EF\u8FED\u4EE3\u5BF9\u8C61\u5728\u8FED\u4EE3\u671F\u95F4\u88AB\u4FEE\u6539\uFF0C\u90A3\u4E48\u8FED\u4EE3\u5668\u4E5F\u4F1A\u53CD\u6620\u76F8\u5E94\u7684\u53D8\u5316</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;fly&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;swim&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> iter <span class="token operator">=</span> arr<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>iter<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// {value: &quot;fly&quot;, done: false}</span>

  <span class="token comment">// \u6DFB\u52A0\u503C</span>
  arr<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&#39;code&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>iter<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// {value: &quot;code&quot;, done: false}</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>iter<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// {value: &quot;swim&quot;, done: false}</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>iter<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// {value: undefined, done: false}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h4 id="\u81EA\u5B9A\u4E49\u8FED\u4EE3\u5668" tabindex="-1"><a class="header-anchor" href="#\u81EA\u5B9A\u4E49\u8FED\u4EE3\u5668" aria-hidden="true">#</a> \u81EA\u5B9A\u4E49\u8FED\u4EE3\u5668</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">class</span> <span class="token class-name">Counter</span> <span class="token punctuation">{</span>
    <span class="token comment">// Counter\u7684\u5B9E\u4F8B\u5E94\u8BE5\u8FED\u4EE3limit\u6B21</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">limit</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>count <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>limit <span class="token operator">=</span> limit<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>count <span class="token operator">&lt;=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>limit<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token literal-property property">done</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>count<span class="token operator">++</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token literal-property property">done</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

  <span class="token punctuation">}</span>

  <span class="token keyword">let</span> counter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Counter</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> ele <span class="token keyword">of</span> counter<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>ele<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// 1</span>
  <span class="token comment">// 2</span>
  <span class="token comment">// 3</span>

  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> ele <span class="token keyword">of</span> counter<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>ele<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// print of nothing</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br></div></div><p>\u8FD9\u6837\u81EA\u5B9A\u4E49\u7684\u8FED\u4EE3\u5668\u867D\u7136\u5B9E\u73B0\u4E86Iterator\u63A5\u53E3\uFF0C\u4F46\u662F\u5B83\u7684\u6BCF\u4E2A\u5B9E\u4F8B\u53EA\u80FD\u8FED\u4EE3\u4E00\u6B21\uFF08\u56E0\u4E3Acount\u8BA1\u6570\u5668\u662F\u540C\u4E00\u4E2A)</p><p>\u901A\u8FC7\u5C06\u8BA1\u6570\u5668\u53D8\u91CF\u653E\u5230\u95ED\u5305\u4E2D\uFF0C\u7136\u540E\u901A\u8FC7\u95ED\u5305\u8FD4\u56DE\u8FED\u4EE3\u5668</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">class</span> <span class="token class-name">Counter</span> <span class="token punctuation">{</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">limit</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>limit <span class="token operator">=</span> limit<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">let</span> count <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span>
          limit <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>limit<span class="token punctuation">;</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">if</span><span class="token punctuation">(</span>count <span class="token operator">&lt;=</span> limit<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token literal-property property">done</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> count<span class="token operator">++</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token literal-property property">done</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

  <span class="token punctuation">}</span>

  <span class="token keyword">let</span> counter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Counter</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> ele <span class="token keyword">of</span> counter<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>ele<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// 1</span>
  <span class="token comment">// 2</span>
  <span class="token comment">// 3</span>

  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> ele <span class="token keyword">of</span> counter<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>ele<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// 1</span>
  <span class="token comment">// 2</span>
  <span class="token comment">// 3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br></div></div><blockquote><p>==\u5F53\u4F60\u771F\u6B63\u7684\u7406\u89E3\u4E86\u8FED\u4EE3\u5668\u7684\u5B9E\u73B0\u539F\u7406\uFF0C\u4F60\u53EF\u4EE5\u4E3A\u4EFB\u610F\u7684\u7C7B\u578B\u5B9E\u73B0\u8FED\u4EE3\u6548\u679C==</p></blockquote><ul><li>ES6\u5B9E\u73B0\u65B9\u5F0F</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span>age<span class="token punctuation">,</span>skill</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>skill <span class="token operator">=</span> skill<span class="token punctuation">;</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>Args <span class="token operator">=</span> arguments<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u5B9E\u73B0Iterator\u63A5\u53E3</span>
    <span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5B9A\u4E49\u8BA1\u6570\u5668</span>
      <span class="token keyword">let</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
      <span class="token comment">// \u5B58\u50A8\u6240\u6709\u53C2\u6570</span>
      <span class="token keyword">let</span> AllArgs <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>Args<span class="token punctuation">;</span>
      <span class="token comment">/* 
        \u8FD4\u56DE\u4E00\u4E2A\u8FED\u4EE3\u5668\u5BF9\u8C61
          - \u8FD9\u4E2A\u5BF9\u8C61\u9700\u8981\u5B9E\u73B0next()\u65B9\u6CD5
      */</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">if</span><span class="token punctuation">(</span>count <span class="token operator">&lt;</span> AllArgs<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token literal-property property">done</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> AllArgs<span class="token punctuation">[</span>count<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token literal-property property">done</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token keyword">undefined</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

  <span class="token punctuation">}</span>

  <span class="token keyword">let</span> person <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">&#39;leo&#39;</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token string">&#39;play code&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>person<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">let</span> iter <span class="token operator">=</span> person<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>iter<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// {done: false, value: &quot;leo&quot;} </span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>iter<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// {done: false, value: 20}</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>iter<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// {done: false, value: &quot;play code&quot;}</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>iter<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// {done: true, value: undefined}</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>iter<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// {done: true, value: undefined}</span>

  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> ele <span class="token keyword">of</span> person<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>ele<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// leo</span>
  <span class="token comment">// 20</span>
  <span class="token comment">// play code</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br></div></div><ul><li>ES5\u5B9E\u73B0\u65B9\u5F0F</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">function</span> <span class="token function">Number</span><span class="token punctuation">(</span><span class="token parameter">num1<span class="token punctuation">,</span> num2<span class="token punctuation">,</span> num3</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>num1 <span class="token operator">=</span> num1<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>num2 <span class="token operator">=</span> num2<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>num3 <span class="token operator">=</span> num3<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>args <span class="token operator">=</span> arguments<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token class-name">Number</span><span class="token punctuation">.</span>prototype<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5B9A\u4E49\u8BA1\u6570\u5668</span>
    <span class="token keyword">let</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token comment">// \u5B58\u50A8\u53C2\u6570\u96C6\u5408</span>
    <span class="token keyword">let</span> Args <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>args<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>count <span class="token operator">&lt;</span> Args<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token literal-property property">done</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> Args<span class="token punctuation">[</span>count<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>
          <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token literal-property property">done</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token keyword">undefined</span> <span class="token punctuation">}</span><span class="token punctuation">;</span> 
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">let</span> numList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Number</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">,</span><span class="token number">34</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>numList<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> ele <span class="token keyword">of</span> numList<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>ele<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// 11</span>
  <span class="token comment">// 23</span>
  <span class="token comment">// 34</span>

  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> ele <span class="token keyword">of</span> numList<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>ele<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// 11</span>
  <span class="token comment">// 23</span>
  <span class="token comment">// 34</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br></div></div><h4 id="\u8FED\u4EE3\u5668\u65B9\u6CD5-1" tabindex="-1"><a class="header-anchor" href="#\u8FED\u4EE3\u5668\u65B9\u6CD5-1" aria-hidden="true">#</a> \u8FED\u4EE3\u5668\u65B9\u6CD5</h4><blockquote><p>keys()\u3001values()\u3001entries() \u8FED\u4EE3\u5668\u65B9\u6CD5</p></blockquote><p>\u4F7F\u7528\u8005\uFF1A==\u6570\u7EC4==\u6216\u8005==Set\u3001Map\uFF08\u53EF\u4EE5\u76F4\u63A5\u67E5\u770B\u5B9E\u4F8B\u7684\u539F\u578B\u5BF9\u8C61\u4E0A\u662F\u5426\u5B58\u5728\u8FD9\u4E09\u4E2A\u65B9\u6CD5\uFF09==</p><p>\u8FD4\u56DE\u503C\uFF1A\u8FED\u4EE3\u5668\u5BF9\u8C61</p><h3 id="\u8FED\u4EE3\u65B9\u6CD5-1" tabindex="-1"><a class="header-anchor" href="#\u8FED\u4EE3\u65B9\u6CD5-1" aria-hidden="true">#</a> \u8FED\u4EE3\u65B9\u6CD5</h3><blockquote><p>every()\u3001some()\u3001filter()\u3001map()\u3001forEach()</p></blockquote><p>\u4F7F\u7528\u8005\uFF1A\u4E3B\u8981\u662F==\u6570\u7EC4==\uFF1B==Set\u4E0EMap\u53EA\u53EF\u4EE5\u4F7F\u7528forEach()==</p><h4 id="foreach\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#foreach\u65B9\u6CD5" aria-hidden="true">#</a> ==forEach\u65B9\u6CD5==</h4><h5 id="foreach\u7684\u7B2C\u4E8C\u4E2A\u53C2\u6570" tabindex="-1"><a class="header-anchor" href="#foreach\u7684\u7B2C\u4E8C\u4E2A\u53C2\u6570" aria-hidden="true">#</a> forEach\u7684\u7B2C\u4E8C\u4E2A\u53C2\u6570</h5><p>forEach\u65B9\u6CD5\u53EF\u901A\u8FC7\u5199\u5165\u7B2C\u4E8C\u4E2A\u53C2\u6570\u5F3A\u5236\u7ED1\u5B9A\u56DE\u8C03\u51FD\u6570\u4E2D\u7684this</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> id <span class="token operator">=</span> <span class="token string">&#39;glo_id&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token string">&#39;obj_id&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">val<span class="token punctuation">,</span>index</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>val<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 1 &quot;glo_id&quot;</span>
<span class="token comment">// 2 &quot;glo_id&quot;</span>
<span class="token comment">// 3 &quot;glo_id&quot;</span>

<span class="token comment">// \u4F20\u9012\u7B2C\u4E8C\u4E2A\u53C2\u6570</span>
<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">val<span class="token punctuation">,</span>index</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>val<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> obj<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u7ED1\u5B9A\u56DE\u8C03\u51FD\u6570\u4E2D\u7684this\u4E3Aobj\u5BF9\u8C61</span>
<span class="token comment">// 1 &quot;obj_id&quot;</span>
<span class="token comment">// 2 &quot;obj_id&quot;</span>
<span class="token comment">// 3 &quot;obj_id&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h5 id="\u4E0D\u6539\u53D8\u539F\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u4E0D\u6539\u53D8\u539F\u6570\u7EC4" aria-hidden="true">#</a> \u4E0D\u6539\u53D8\u539F\u6570\u7EC4</h5><blockquote><p><strong>\u9996\u5148\uFF0CforEach\u65B9\u6CD5\u7684\u8FD4\u56DE\u503C\u4E3Aundefined\uFF0C\u5E76\u4E14forEach\u4E0D\u6539\u53D8\u539F\u6570\u7EC4\uFF01</strong></p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 1,2,3,4</span>
  <span class="token comment">// \u64CD\u4F5C\u6570\u7EC4</span>
  arr<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    item <span class="token operator">=</span> item <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 1,2,3,4</span>
<span class="token punctuation">}</span>

<span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>\u901A\u8FC7\u4E0A\u9762\u7684\u4EE3\u7801\u53D1\u73B0\uFF0CforEach\u6CA1\u6709\u6539\u53D8\u539F\u6570\u7EC4</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// [{name: &#39;leo&#39;},{name: &#39;leo&#39;},{name: &#39;leo&#39;},{name: &#39;leo&#39;}]</span>
  <span class="token comment">// \u64CD\u4F5C\u6570\u7EC4</span>
  arr<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    item<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&#39;leo&#39;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// [{name: &#39;leo&#39;},{name: &#39;leo&#39;},{name: &#39;leo&#39;},{name: &#39;leo&#39;}]</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u6570\u7EC4\u4E2D\u6BCF\u4E2A\u5BF9\u8C61\u90FD\u6CA1\u6709name\u5C5E\u6027</span>
<span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>\u4F46\u662F\u518D\u8FD0\u884C\u4E0A\u9762\u7684\u4EE3\u7801\uFF0C\u53D1\u73B0forEach\u65B9\u6CD5\u5C45\u7136\u6539\u53D8\u4E86\u539F\u6765\u7684\u6570\u7EC4\uFF01\uFF01</p><p>\u89E3\u91CA\uFF1A</p><p>==\u5176\u5B9E\u5E76\u4E0D\u662F\u56E0\u4E3AforEach\u65B9\u6CD5\u4F1A\u6539\u53D8\u539F\u6570\u7EC4\uFF0C\u800C\u662F\u56E0\u4E3A\u6B64\u65F6\u7684\u6BCF\u4E00\u4E2A\u5143\u7D20\u503C\u90FD\u662F\u5F15\u7528\u7C7B\u578B\uFF08\u5BF9\u8C61\uFF09\uFF0C\u53C8\u56E0\u4E3A\u51FD\u6570\u7684\u8C03\u7528\uFF08\u8FD9\u91CC\u662F\u56DE\u8C03\uFF09\u662F\u6D45\u62F7\u8D1D\uFF0C\u4F1A\u5BF9\u5806\u4E2D\u7684\u5BF9\u8C61\u8FDB\u884C\u64CD\u4F5C\uFF0C\u6545\u6B64\u65F6\u4F1A\u6539\u53D8\u539F\u6570\u7EC4\u4E2D\u7684\u5143\u7D20==</p><h4 id="map\u4E0Eset\u5BF9\u4E8E\u8FED\u4EE3\u65B9\u6CD5\u7684\u4F7F\u7528" tabindex="-1"><a class="header-anchor" href="#map\u4E0Eset\u5BF9\u4E8E\u8FED\u4EE3\u65B9\u6CD5\u7684\u4F7F\u7528" aria-hidden="true">#</a> Map\u4E0ESet\u5BF9\u4E8E\u8FED\u4EE3\u65B9\u6CD5\u7684\u4F7F\u7528</h4><p>\u901A\u8FC7\u67E5\u770BSet\u4E0EMap\u539F\u578B\u5BF9\u8C61\u7684\u5C5E\u6027\u53EF\u4EE5\u77E5\u9053\uFF0C==Set\u4E0EMap\u90FD\u53EA\u53EF\u4EE5\u4F7F\u7528forEach()\u8FD9\u4E00\u4E2A\u8FED\u4EE3\u65B9\u6CD5==</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">let</span> s <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;forEach&quot;</span> <span class="token keyword">in</span> s<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// true</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;every&quot;</span> <span class="token keyword">in</span> s<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// false</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;some&quot;</span> <span class="token keyword">in</span> s<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// false</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;map&quot;</span> <span class="token keyword">in</span> s<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// false</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;filter&quot;</span> <span class="token keyword">in</span> s<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// false</span>

  <span class="token keyword">let</span> m <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;forEach&quot;</span> <span class="token keyword">in</span> m<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// true</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;every&quot;</span> <span class="token keyword">in</span> m<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// false</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;some&quot;</span> <span class="token keyword">in</span> m<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// false</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;map&quot;</span> <span class="token keyword">in</span> m<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// false</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;filter&quot;</span> <span class="token keyword">in</span> m<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h2 id="\u751F\u6210\u5668" tabindex="-1"><a class="header-anchor" href="#\u751F\u6210\u5668" aria-hidden="true">#</a> \u751F\u6210\u5668</h2><h3 id="\u8BA4\u8BC6\u751F\u6210\u5668" tabindex="-1"><a class="header-anchor" href="#\u8BA4\u8BC6\u751F\u6210\u5668" aria-hidden="true">#</a> \u8BA4\u8BC6\u751F\u6210\u5668</h3><blockquote><p>\u662FES6\u65B0\u589E\u7684\u7ED3\u6784\uFF0C\u62E5\u6709\u5728\u4E00\u4E2A\u51FD\u6570\u5757\u5185\u6682\u505C\u548C\u6062\u590D\u4EE3\u7801\u6267\u884C\u7684\u80FD\u529B</p></blockquote><blockquote><p>\u8BED\u6CD5</p><p>\u751F\u6210\u5668\u7684\u5F62\u5F0F\u662F\u4E00\u4E2A\u51FD\u6570\uFF0C\u51FD\u6570\u540D\u79F0\u524D\u9762\u52A0\u4E00\u4E2A\u661F\u53F7 ( * ) \u8868\u793A\u5B83\u662F\u4E00\u4E2A\u751F\u6210\u5668\u3002<strong>\u53EA\u8981\u662F\u53EF\u4EE5\u5B9A\u4E49\u51FD\u6570\u7684\u5730\u65B9\u5C31\u53EF\u4EE5\u5B9A\u4E49\u751F\u6210\u5668</strong></p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u751F\u6210\u5668\u51FD\u6570\u58F0\u660E</span>
<span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">generatorFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token comment">// \u751F\u6210\u5668\u51FD\u6570\u8868\u8FBE\u5F0F</span>
<span class="token keyword">let</span> <span class="token function-variable function">generatorFn</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token operator">*</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token punctuation">}</span>
<span class="token comment">// \u4F5C\u4E3A\u5BF9\u8C61\u5B57\u9762\u91CF\u65B9\u6CD5\u7684\u751F\u6210\u5668\u51FD\u6570</span>
<span class="token keyword">let</span> foo <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token operator">*</span> <span class="token function">generatorFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u4F5C\u4E3A\u7C7B\u5B9E\u4F8B\u65B9\u6CD5\u7684\u751F\u6210\u5668\u51FD\u6570</span>
<span class="token keyword">class</span> <span class="token class-name">Foo</span> <span class="token punctuation">{</span>
  <span class="token operator">*</span> <span class="token function">generatorFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u4F5C\u4E3A\u7C7B\u9759\u6001\u65B9\u6CD5\u7684\u751F\u6210\u5668\u51FD\u6570</span>
<span class="token keyword">class</span> <span class="token class-name">Bar</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token operator">*</span> <span class="token function">generatorFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><blockquote><p>\u751F\u6210\u5668\u7684\u8C03\u7528\uFF1A\u4F1A\u8FD4\u56DE\u4E00\u4E2A<strong>\u751F\u6210\u5668\u5BF9\u8C61</strong>\u3002\u751F\u6210\u5668\u5BF9\u8C61\u4E00\u5F00\u59CB\u5904\u4E8E\u6682\u505C\u72B6\u6001\uFF08suspended\uFF09\u3002\u6B64\u5BF9\u8C61\u5B9E\u73B0\u4E86Iterator\u63A5\u53E3\uFF0C\u56E0\u6B64\u5177\u6709next()\u65B9\u6CD5\u3002\u8C03\u7528\u6B64\u65B9\u6CD5\u4F1A\u8BA9\u751F\u6210\u5668\u5F00\u59CB\u6216\u8005\u6062\u590D\u6267\u884C\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">generatorFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token string">&#39;foo&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> g <span class="token operator">=</span> <span class="token function">generatorFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>g<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u751F\u6210\u5668\u5BF9\u8C61 generatorFn {&lt;suspended&gt;}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>g<span class="token punctuation">.</span>next<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u0192 next() { [native code] }</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>g<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// {value: &quot;foo&quot;, done: true}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>g<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u751F\u6210\u5668\u5BF9\u8C61 generatorFn {&lt;closed&gt;}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>g<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">===</span> g<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="yield\u4E2D\u65AD\u6267\u884C" tabindex="-1"><a class="header-anchor" href="#yield\u4E2D\u65AD\u6267\u884C" aria-hidden="true">#</a> yield\u4E2D\u65AD\u6267\u884C</h3><h4 id="yield" tabindex="-1"><a class="header-anchor" href="#yield" aria-hidden="true">#</a> yield</h4><blockquote><p>yield\u53EF\u4EE5\u8BA9\u751F\u6210\u5668\u505C\u6B62\u548C\u5F00\u59CB\u6267\u884C\u3002</p><p><strong>\u751F\u6210\u5668\u51FD\u6570\u9047\u5230yield\u5173\u952E\u5B57\u4E4B\u524D\u4F1A\u6B63\u5E38\u6267\u884C\u3002\u9047\u5230\u8FD9\u4E2A\u5173\u952E\u5B57\u540E\uFF0C\u6267\u884C\u505C\u6B62\uFF0C\u51FD\u6570\u4F5C\u7528\u57DF\u72B6\u6001\u4F1A\u88AB\u4FDD\u7559\u3002\u505C\u6B62\u6267\u884C\u7684\u751F\u6210\u5668\u51FD\u6570\u53EA\u80FD\u901A\u8FC7\u5728\u751F\u6210\u5668\u5BF9\u8C61\u4E0A\u8C03\u7528next()\u65B9\u6CD5\u6765\u6062\u590D\u6267\u884C</strong></p></blockquote><p><strong>\u901A\u8FC7yield\u5173\u952E\u5B57\u9000\u51FA\u7684\u751F\u6210\u5668\u51FD\u6570\u4F1A\u5904\u4E8Edone: false\u72B6\u6001\uFF1B\u901A\u8FC7return\u5173\u952E\u5B57\u9000\u51FA\u7684\u751F\u6210\u5668\u51FD\u6570\u4F1A\u5904\u4E8Edone: true\u72B6\u6001</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">gerFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">yield</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token keyword">yield</span><span class="token punctuation">;</span>
  <span class="token keyword">yield</span> <span class="token number">2</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token string">&#39;finish&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> g <span class="token operator">=</span> <span class="token function">gerFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>g<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// {value: 1, done: false}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>g<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// {value: undefined, done: false}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>g<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// {value: 2, done: false}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>g<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// {value: &quot;finish&quot;, done: true}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>g<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// {value: undefined, done: true}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h4 id="yield\u5B9E\u73B0\u8F93\u5165\u4E0E\u8F93\u51FA" tabindex="-1"><a class="header-anchor" href="#yield\u5B9E\u73B0\u8F93\u5165\u4E0E\u8F93\u51FA" aria-hidden="true">#</a> yield\u5B9E\u73B0\u8F93\u5165\u4E0E\u8F93\u51FA</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">generatorFn</span><span class="token punctuation">(</span><span class="token parameter">init</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>init<span class="token punctuation">)</span><span class="token punctuation">;</span>

  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">yield</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">yield</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> g <span class="token operator">=</span> <span class="token function">generatorFn</span><span class="token punctuation">(</span><span class="token string">&#39;\u521D\u59CB\u5316\u53C2\u6570&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>g<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// generatorFn {&lt;suspended&gt;}</span>

<span class="token comment">/* 
  \u8FD9\u91CC\u5199g.next(&#39;\u7B2C\u4E00\u6B21&#39;);\u4E5F\u662F\u4E00\u6837\u7684\u6548\u679C
*/</span>
g<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u521D\u59CB\u5316\u53C2\u6570</span>

g<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token string">&#39;\u4F20\u5165\u7684\u7B2C\u4E8C\u4E2A\u53C2\u6570&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u4F20\u5165\u7684\u7B2C\u4E8C\u4E2A\u53C2\u6570</span>
g<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token string">&#39;\u4F20\u5165\u7684\u7B2C\u4E09\u4E2A\u53C2\u6570&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u4F20\u5165\u7684\u7B2C\u4E09\u4E2A\u53C2\u6570</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>g<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// generatorFn {&lt;closed&gt;}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><blockquote><p>==\u7B2C\u4E00\u6B21\u8C03\u7528next()\u53EA\u662F\u4E3A\u4E86\u5F00\u59CB\u6267\u884C\u751F\u6210\u5668\u51FD\u6570\uFF0C\u6545\u4F20\u5165\u7684\u662F\u503C\u4E0D\u4F1A\u88AB\u4F7F\u7528==</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">generatorFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">yield</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">yield</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> g <span class="token operator">=</span> <span class="token function">generatorFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>g<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// generatorFn {&lt;suspended&gt;}</span>
<span class="token comment">/* 
  \u7B2C\u4E00\u6B21\u8C03\u7528next()\u4F20\u5165\u7684\u503C\u4E0D\u4F1A\u88AB\u4F7F\u7528\uFF0C
  \u56E0\u4E3A\u8FD9\u4E00\u6B21\u8C03\u7528\u662F\u4E3A\u4E86\u5F00\u59CB\u6267\u884C\u751F\u6210\u5668\u51FD\u6570
*/</span>
g<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token string">&#39;\u7B2C\u4E00\u6B21&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 

g<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token string">&#39;\u4F20\u5165\u7684\u7B2C\u4E8C\u4E2A\u53C2\u6570&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u4F20\u5165\u7684\u7B2C\u4E8C\u4E2A\u53C2\u6570</span>
g<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token string">&#39;\u4F20\u5165\u7684\u7B2C\u4E09\u4E2A\u53C2\u6570&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u4F20\u5165\u7684\u7B2C\u4E09\u4E2A\u53C2\u6570</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>g<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// generatorFn {&lt;closed&gt;}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h5 id="yield\u53EF\u4EE5\u540C\u65F6\u7528\u4E8E\u8F93\u5165\u4E0E\u8F93\u51FA" tabindex="-1"><a class="header-anchor" href="#yield\u53EF\u4EE5\u540C\u65F6\u7528\u4E8E\u8F93\u5165\u4E0E\u8F93\u51FA" aria-hidden="true">#</a> yield\u53EF\u4EE5\u540C\u65F6\u7528\u4E8E\u8F93\u5165\u4E0E\u8F93\u51FA</h5><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">gerFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">yield</span> <span class="token string">&#39;foo&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> g <span class="token operator">=</span> <span class="token function">gerFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>g<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// {value: &quot;foo&quot;, done: false}  </span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>g<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token string">&#39;bar&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// {value: &quot;bar&quot;, done: false}  </span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>g<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// {value: undefined, done: true}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="\u63D0\u524D\u7EC8\u6B62\u751F\u6210\u5668" tabindex="-1"><a class="header-anchor" href="#\u63D0\u524D\u7EC8\u6B62\u751F\u6210\u5668" aria-hidden="true">#</a> \u63D0\u524D\u7EC8\u6B62\u751F\u6210\u5668</h3><ol><li>return()\u65B9\u6CD5\uFF1A\u5F3A\u5236\u751F\u6210\u5668\u8FDB\u5165\u5173\u95ED\u72B6\u6001\u3002\u63D0\u4F9B\u7ED9return()\u65B9\u6CD5\u7684\u503C\u5C31\u662F\u7EC8\u6B62\u8FED\u4EE3\u5668\u5BF9\u8C61\u7684\u503C</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">generatorFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> x <span class="token keyword">of</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">yield</span> x<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> g <span class="token operator">=</span> <span class="token function">generatorFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>g<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// generatorFn {&lt;suspended&gt;}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>g<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// {value: 1, done: false}</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>g<span class="token punctuation">.</span><span class="token function">return</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// {value: 4, done: true}</span>

<span class="token comment">/* 
  \u6B64\u65F6\u751F\u6210\u5668\u5DF2\u8FDB\u5165\u5173\u95ED\u72B6\u6001\uFF0C\u65E0\u6CD5\u6062\u590D
*/</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>g<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// generatorFn {&lt;closed&gt;}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>g<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// {value: undefined, done: true}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><ol start="2"><li>throw()\u65B9\u6CD5</li></ol><blockquote><p>\u9519\u8BEF\u672A\u5904\u7406</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">generatorFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> x <span class="token keyword">of</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">yield</span> x<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> g <span class="token operator">=</span> <span class="token function">generatorFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>g<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// generatorFn {&lt;suspended&gt;}</span>
<span class="token keyword">try</span> <span class="token punctuation">{</span>
  g<span class="token punctuation">.</span><span class="token function">throw</span><span class="token punctuation">(</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// foo</span>
<span class="token punctuation">}</span>
<span class="token comment">/* 
  \u7531\u4E8E\u9519\u8BEF\u672A\u5904\u7406\uFF0C\u751F\u6210\u5668\u5173\u95ED
*/</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>g<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// generatorFn {&lt;closed&gt;}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><blockquote><p>\u751F\u6210\u5668\u51FD\u6570\u5185\u90E8\u5904\u7406\u9519\u8BEF</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">generatorFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> x <span class="token keyword">of</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token keyword">yield</span> x<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> g <span class="token operator">=</span> <span class="token function">generatorFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>g<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// generatorFn {&lt;suspended&gt;}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>g<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// {value: 1, done: false}</span>

<span class="token comment">/* 
  \u51FD\u6570\u5185\u90E8\u5904\u7406\u9519\u8BEF\uFF0C\u9519\u8BEF\u5904\u7406\u8DF3\u8FC7\u5BF9\u5E94\u7684yield\uFF08\u8FD9\u91CC\u662F2\uFF09
*/</span>
g<span class="token punctuation">.</span><span class="token function">throw</span><span class="token punctuation">(</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>g<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// generatorFn {&lt;suspended&gt;}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>g<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// {value: 3, done: false}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><blockquote><p>\u6CE8\u610F\uFF1A\u5982\u679C\u751F\u6210\u5668\u5BF9\u8C61\u8FD8\u6CA1\u6709\u5F00\u59CB\u6267\u884C\uFF0C\u90A3\u4E48\u8C03\u7528throw()\u629B\u51FA\u7684\u9519\u8BEF\u4E0D\u4F1A\u5728\u51FD\u6570\u5185\u90E8\u88AB\u6355\u83B7\uFF0C\u56E0\u4E3A\u8FD9\u662F\u76F8\u5F53\u4E8E\u5728\u51FD\u6570\u5916\u90E8\u629B\u51FA\u4E86\u9519\u8BEF</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">generatorFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> x <span class="token keyword">of</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token keyword">yield</span> x<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> g <span class="token operator">=</span> <span class="token function">generatorFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
g<span class="token punctuation">.</span><span class="token function">throw</span><span class="token punctuation">(</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u62A5\u9519 Uncaught foo</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>g<span class="token punctuation">)</span><span class="token punctuation">;</span>  
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>g<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div>`,156);function e(c,l){return o}var i=n(t,[["render",e],["__file","JS \u2014 \u96C6\u5408\u5F15\u7528\u7C7B\u578B\u4E0E\u8FED\u4EE3\u5668\u3001\u751F\u6210\u5668.html.vue"]]);export{i as default};

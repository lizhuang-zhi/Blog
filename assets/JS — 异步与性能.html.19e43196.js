import{_ as n,e as s}from"./app.fc2879aa.js";var a="/blog/images/JS_img/image-20210625144621851.png",p="/blog/images/JS_img/image-20210625154800094.png",t="/blog/images/JS_img/image-20210625154836956.png";const e={},o=s(`<h1 id="\u5F02\u6B65\u63A7\u5236\u53F0" tabindex="-1"><a class="header-anchor" href="#\u5F02\u6B65\u63A7\u5236\u53F0" aria-hidden="true">#</a> \u5F02\u6B65\u63A7\u5236\u53F0</h1><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">index</span><span class="token operator">:</span> <span class="token number">1</span>
<span class="token punctuation">}</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span> 

a<span class="token punctuation">.</span>index<span class="token operator">++</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><img src="`+a+`" alt="image-20210625144621851" style="zoom:80%;"><p>\u5BF9\u4E8E\u8FD9\u6BB5\u7B80\u5355\u7684\u4EE3\u7801\u4F1A\u770B\u5230\u4E00\u4E2A\u610F\u5916\u7684\u7ED3\u679C\uFF0C\u8FD9\u53EF\u80FD\u662F**<code>I/O</code>\u7684\u5F02\u6B65\u5316**\u9020\u6210\u7684\u3002\u4EE3\u7801\u8FD0\u884C\u65F6\uFF0C\u6D4F\u89C8\u5668\u53EF\u80FD\u4F1A\u8BA4\u4E3A\u9700\u8981\u628A\u63A7\u5236\u5EF6\u8FDF\u5230\u540E\u53F0\uFF0C\u5728\u8FD9\u79CD\u60C5\u51B5\u4E0B\uFF0C\u7B49\u5230\u6D4F\u89C8\u5668\u63A7\u5236\u53F0\u8F93\u51FA\u5BF9\u8C61\u5185\u5BB9\u65F6\uFF0C<code>a.index++</code>\u53EF\u80FD\u5DF2\u7ECF\u6267\u884C\uFF0C\u56E0\u6B64\u4F1A\u663E\u793A<code>{ index:2 }</code></p><blockquote><p>\u4F18\u5316\u65B9\u6848</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">index</span><span class="token operator">:</span> <span class="token number">1</span>
<span class="token punctuation">}</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// {&quot;index&quot;:1}</span>

a<span class="token punctuation">.</span>index<span class="token operator">++</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// {&quot;index&quot;:2}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h1 id="\u5E76\u53D1\u4E0E\u5E76\u884C" tabindex="-1"><a class="header-anchor" href="#\u5E76\u53D1\u4E0E\u5E76\u884C" aria-hidden="true">#</a> \u5E76\u53D1\u4E0E\u5E76\u884C</h1><blockquote><p>\u5E76\u53D1</p></blockquote><p>\u5C31\u662F\u9488\u5BF9\u4E0E<strong>\u5355\u6838CPU</strong>\uFF0C\u6211\u4EEC\u5F80\u5F80\u9700\u8981\u5728\u5EFA\u7ACB\u7684<strong>\u591A\u4EFB\u52A1\u4E4B\u95F4\u6765\u56DE\u5207\u6362</strong>\uFF08\u4F46\u662F\u5207\u6362\u7684\u901F\u5EA6\u5F88\u5FEB\uFF0C\u7528\u6237\u65E0\u6CD5\u5BDF\u89C9\uFF09\uFF0C\u5B9E\u73B0\u89C6\u89C9\u4E0A\u7684 \u201C\u540C\u65F6\u201D \u8FDB\u884C</p><img src="`+p+'" alt="image-20210625154800094" style="zoom:77%;"><blockquote><p>\u5E76\u884C</p></blockquote><p>\u5BF9\u4E8E<strong>\u591A\u6838CPU</strong>\uFF0C\u6BCF\u4E2A<strong>\u72EC\u7ACB</strong>\u7684CPU\u6267\u884C\u5404\u81EA\u7684\u8FDB\u7A0B\uFF0C<strong>\u4E24\u4E2A\u8FDB\u7A0B\u4E92\u4E0D\u62A2\u5360CPU\u8D44\u6E90</strong>\uFF0C\u53EF\u4EE5\u540C\u65F6\u8FDB\u884C</p><img src="'+t+`" alt="image-20210625154836956" style="zoom:77%;"><h1 id="\u94FE\u5F0F\u6D41" tabindex="-1"><a class="header-anchor" href="#\u94FE\u5F0F\u6D41" aria-hidden="true">#</a> \u94FE\u5F0F\u6D41</h1><p>Promise\u7684\u5F3A\u5927\uFF1A\u6211\u4EEC\u6784\u5EFA\u4E00\u4E2A\u5E8F\u5217\uFF0C\u4E0D\u7BA1\u6211\u4EEC\u60F3\u8981\u591A\u5C11\u4E2A\u5F02\u6B65\u6B65\u9AA4\uFF0C\u6BCF\u4E00\u6B65\u90FD\u80FD\u591F\u6839\u636E\u9700\u8981\u7B49\u5F85\u4E0B\u4E00\u6B65\uFF08==\u6216\u8005\u4E0D\u7B49\uFF01==\uFF09</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">delay</span><span class="token punctuation">(</span><span class="token parameter">time</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> time<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;step 2 (after 500ms)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;step 3 (after 1000ms)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u8FD9\u91CC\u6CA1\u6709\u7B49\u5F85</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;step 4 (next Job)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">1500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;step 5 (after 1500ms)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><p>\u6267\u884C\u67E5\u770B\u6548\u679C\uFF01</p><h1 id="promise\u6A21\u5F0F" tabindex="-1"><a class="header-anchor" href="#promise\u6A21\u5F0F" aria-hidden="true">#</a> Promise\u6A21\u5F0F</h1><h2 id="promise-all" tabindex="-1"><a class="header-anchor" href="#promise-all" aria-hidden="true">#</a> <code>Promise.all([..])</code></h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">promise_1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;promise_1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">2000</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">promise_2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;promise_2&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
    <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">1500</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> res <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token function">promise_1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">promise_2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  res<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 2\u79D2\u540E\uFF1A[&quot;promise_1&quot;, &quot;promise_2&quot;]</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><p>\u5982\u679C\u5C06\u51FD\u6570<code>promise_2()</code>\u4E2D\u7684<code>resolve</code>\u6362\u4E3A<code>reject</code>\uFF0C\u7ED3\u679C\u5982\u4E0B</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">promise_1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;promise_1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">2000</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">promise_2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u8FD9\u91CC\u6362\u4E3A reject</span>
      <span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">&#39;promise_2&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
    <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">1500</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> res <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token function">promise_1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">promise_2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  res<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>  
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// 1.5\u79D2\u540E\uFF1Apromise_2</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><p><strong>\u5982\u679C\u8FD9\u4E9B<code>promise</code>\u4E2D\u6709\u4EFB\u4F55\u4E00\u4E2A\u88AB\u62D2\u7EDD\u7684\u8BDD\uFF0C\u4E3B<code>Promise.all({..})promise</code>\u5C31\u4F1A\u7ACB\u5373\u88AB\u62D2\u7EDD\uFF0C\u5E76\u4E22\u5F03\u6765\u81EA\u5176\u4ED6\u6240\u6709<code>promise</code>\u7684\u5168\u90E8\u7ED3\u679C\uFF01</strong></p><h2 id="promise-race" tabindex="-1"><a class="header-anchor" href="#promise-race" aria-hidden="true">#</a> <code>Promise.race([..])</code></h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">promise_1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;promise_1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">2000</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">promise_2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;promise_2&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
    <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">1500</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> res <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">race</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token function">promise_1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">promise_2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  res<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// 1.5\u79D2\u540E\uFF1Apromise_2</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>   
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><blockquote><p>\u6CE8\u610F\uFF1A\u5982\u679C\u4F20\u7ED9<code>Promise.race()</code>\u7684\u53C2\u6570\u4E3A\u4E00\u4E2A\u7A7A\u6570\u7EC4\uFF0C\u90A3\u4E48\u4E3B<code>race([..])</code>Promise<strong>\u6C38\u8FDC\u4E0D\u4F1A\u51B3\u8BAE</strong>\uFF0C\u800C\u4E0D\u662F\u7ACB\u5373\u51B3\u8BAE\uFF01</p></blockquote><h2 id="\u4E24\u8005\u533A\u522B" tabindex="-1"><a class="header-anchor" href="#\u4E24\u8005\u533A\u522B" aria-hidden="true">#</a> \u4E24\u8005\u533A\u522B</h2><p>\u5BF9\u4E8E<code>Promise.all([..])</code>\u6765\u8BF4\uFF0C\u53EA\u6709\u4F20\u5165\u7684\u6240\u6709<code>promise</code>\u90FD\u5B8C\u6210\uFF0C\u8FD4\u56DE<code>promise</code>\u624D\u80FD\u5B8C\u6210\u3002\u5982\u679C\u6709\u4EFB\u4F55<code>promise</code>\u88AB\u62D2\u7EDD\uFF0C\u8FD4\u56DE\u7684\u4E3B<code>promise</code>\u5C31\u7ACB\u5373\u4F1A\u88AB\u62D2\u7EDD\uFF08\u5E76\u4E22\u5F03\u6765\u81EA\u5176\u4ED6\u6240\u6709<code>promise</code>\u7684\u5168\u90E8\u7ED3\u679C\uFF09\u3002</p><p>\u5BF9\u4E8E<code>Promise.race([..])</code>\u6765\u8BF4\uFF0C\u53EA\u6709\u7B2C\u4E00\u4E2A\u51B3\u8BAE\u7684<code>promise</code>\uFF08\u5B8C\u6210\u6216\u62D2\u7EDD\uFF09\u53D6\u80DC\uFF0C\u5176\u51B3\u8BAE\u7ED3\u679C\u6210\u4E3A\u8FD4\u56DE<code>promise</code>\u7684\u51B3\u8BAE\u3002</p><blockquote><p>\u5982\u679C\u4F20\u7ED9<code>Promise.all()</code>\u7684\u53C2\u6570\u4E3A\u4E00\u4E2A\u7A7A\u6570\u7EC4\uFF0C\u90A3\u4E48\u4E3B<code>all([..])</code>Promise<strong>\u7ACB\u5373\u51B3\u8BAE</strong>\uFF1B\u5982\u679C\u4F20\u7ED9<code>Promise.race()</code>\u7684\u53C2\u6570\u4E3A\u4E00\u4E2A\u7A7A\u6570\u7EC4\uFF0C\u90A3\u4E48\u4E3B<code>race([..])</code>Promise<strong>\u6C38\u8FDC\u4E0D\u4F1A\u51B3\u8BAE</strong></p></blockquote><h1 id="promise-api" tabindex="-1"><a class="header-anchor" href="#promise-api" aria-hidden="true">#</a> Promise API</h1><h2 id="new-promise\u6784\u9020\u5668" tabindex="-1"><a class="header-anchor" href="#new-promise\u6784\u9020\u5668" aria-hidden="true">#</a> new Promise\u6784\u9020\u5668</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">promise_2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;promise_2&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
    <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">3000</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">promise</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u8FD9\u91CC\u7684 resolve \u56DE\u8C03\u53C2\u6570\u662F\u4E00\u4E2A \`\u5B8C\u6210promise\`</span>
      <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token function">promise_2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">3000</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token function">promise</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// 6\u79D2\u540E\uFF1Apromise_2</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">promise_2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">&#39;promise_2&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
    <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">3000</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">promise</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token comment">// // \u8FD9\u91CC\u7684 resolve \u56DE\u8C03\u53C2\u6570\u662F\u4E00\u4E2A \`\u62D2\u7EDDpromise\`</span>
      <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token function">promise_2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">3000</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token function">promise</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>   
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// 6\u79D2\u540E\uFF1Apromise_2</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><blockquote><p>\u6240\u4EE5<code>reject(..)</code>\u5C31\u662F\u62D2\u7EDD\u8FD9\u4E2A<code>promise</code>\uFF1B\u4F46<code>resolve(..)</code>\u65E2\u53EF\u80FD\u5B8C\u6210<code>promise</code>\uFF0C\u4E5F\u53EF\u80FD\u62D2\u7EDD\uFF0C\u8981\u6839\u636E\u4F20\u5165\u53C2\u6570\u800C\u5B9A\u3002\u5982\u679C\u4F20\u7ED9<code>resolve(..)</code>\u7684\u662F\u4E00\u4E2A\u975E<code>Promise</code>\uFF0C\u975E<code>thenable</code>\u7684\u7ACB\u5373\u503C\uFF0C\u8FD9\u4E2A<code>promise</code>\u5C31\u4F1A\u7528\u8FD9\u4E2A\u503C\u5B8C\u6210</p><p>\u4F46\u662F\uFF0C<strong>\u5982\u679C\u4F20\u7ED9<code>resolve(..)</code>\u7684\u662F\u4E00\u4E2A\u771F\u6B63\u7684<code>Promise</code>\u6216<code>thenable</code>\u503C\uFF0C\u8FD9\u4E2A\u503C\u5C31\u4F1A\u88AB\u9012\u5F52\u5C55\u5F00\uFF0C\u5E76\u4E14\uFF08\u8981\u6784\u9020\u7684\uFF09<code>promise</code>\u5C06\u53D6\u7528\u5176\u6700\u7EC8\u51B3\u8BAE\u503C\u6216\u72B6\u6001</strong></p></blockquote><h2 id="then-\u548Ccatch" tabindex="-1"><a class="header-anchor" href="#then-\u548Ccatch" aria-hidden="true">#</a> <code>then(..)</code>\u548C<code>catch(..)</code></h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>p<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span> fulfilled <span class="token punctuation">)</span><span class="token punctuation">;</span>
p<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span> fulfilled<span class="token punctuation">,</span> rejected <span class="token punctuation">)</span><span class="token punctuation">;</span>
p<span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span> rejected <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u7B49\u4EF7\u4E8E p.then( null, rejected );</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h1 id="promise\u539F\u7406" tabindex="-1"><a class="header-anchor" href="#promise\u539F\u7406" aria-hidden="true">#</a> ==Promise\u539F\u7406==</h1><h2 id="\u57FA\u7840\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u57FA\u7840\u5B9E\u73B0" aria-hidden="true">#</a> \u57FA\u7840\u5B9E\u73B0</h2>`,39);function c(u,l){return o}var r=n(e,[["render",c],["__file","JS \u2014 \u5F02\u6B65\u4E0E\u6027\u80FD.html.vue"]]);export{r as default};

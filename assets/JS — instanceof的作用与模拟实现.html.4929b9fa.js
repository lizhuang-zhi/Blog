import{_ as n,e as s}from"./app.fc2879aa.js";const a={},p=s(`<h1 id="instanceof\u7684\u4F5C\u7528\u4E0E\u6A21\u62DF\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#instanceof\u7684\u4F5C\u7528\u4E0E\u6A21\u62DF\u5B9E\u73B0" aria-hidden="true">#</a> instanceof\u7684\u4F5C\u7528\u4E0E\u6A21\u62DF\u5B9E\u73B0</h1><h2 id="\u68C0\u6D4B-\u5BF9\u8C61-\u4E0E-\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u68C0\u6D4B-\u5BF9\u8C61-\u4E0E-\u51FD\u6570" aria-hidden="true">#</a> \u68C0\u6D4B \u5BF9\u8C61 \u4E0E \u51FD\u6570</h2><ul><li><p>\u8BED\u6CD5</p><blockquote><p>\u68C0\u6D4B <strong>\u5BF9\u8C61</strong> instanceof <strong>\u51FD\u6570</strong></p></blockquote></li><li><p>\u5B9A\u4E49</p><blockquote><p>instanceof\u8FD0\u7B97\u7B26\u7528\u6765\u5224\u65AD\u4E00\u4E2A==\u6784\u9020\u51FD\u6570\u7684prototype==\u5C5E\u6027\u6240\u6307\u5411\u7684\u5BF9\u8C61\u662F\u5426\u5B58\u5728\u53E6\u5916\u4E00\u4E2A\u8981\u68C0\u6D4B\u5BF9\u8C61\u7684\u539F\u578B\u94FE\u4E0A</p></blockquote></li><li><p>\u4F7F\u7528</p></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">function</span> <span class="token function">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token keyword">function</span> <span class="token function">Stu</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

  <span class="token comment">// \u7EE7\u627F</span>
  <span class="token class-name">Stu</span><span class="token punctuation">.</span>prototype <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> stu <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Stu</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>stu <span class="token keyword">instanceof</span> <span class="token class-name">Person</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// true</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>stu <span class="token keyword">instanceof</span> <span class="token class-name">Stu</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// true</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>stu <span class="token keyword">instanceof</span> <span class="token class-name">Object</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><ul><li>\u6A21\u62DF\u5B9E\u73B0</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">InstanceOf</span><span class="token punctuation">(</span><span class="token parameter">left<span class="token punctuation">,</span> right</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u83B7\u53D6\u68C0\u6D4B\u5BF9\u8C61\u7684\u539F\u578B\u5BF9\u8C61</span>
  <span class="token comment">// let proto = left.__proto__;</span>
  <span class="token keyword">let</span> proto <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">getPrototypeOf</span><span class="token punctuation">(</span>left<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// \u83B7\u53D6\u6784\u9020\u51FD\u6570\u7684\u539F\u578B\u5BF9\u8C61</span>
  <span class="token keyword">let</span> Prototype <span class="token operator">=</span> right<span class="token punctuation">.</span>prototype<span class="token punctuation">;</span>

  <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">/* 
      \u904D\u5386\u539F\u578B\u94FE\uFF0C\u76F4\u81F3\u539F\u578B\u94FE\u7ED3\u675F\uFF08proto == null\uFF09\u7EC8\u6B62\u5BFB\u627E
    */</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>proto<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>proto <span class="token operator">===</span> Prototype<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>

    <span class="token comment">// proto = proto.__proto__;</span>
    proto <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">getPrototypeOf</span><span class="token punctuation">(</span>proto<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token punctuation">}</span>

<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">Stu</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token comment">// \u7EE7\u627F</span>
<span class="token class-name">Stu</span><span class="token punctuation">.</span>prototype <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> stu <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Stu</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">InstanceOf</span><span class="token punctuation">(</span>stu<span class="token punctuation">,</span>Object<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">InstanceOf</span><span class="token punctuation">(</span>stu<span class="token punctuation">,</span>Stu<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">InstanceOf</span><span class="token punctuation">(</span>stu<span class="token punctuation">,</span>Person<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// true</span>


<span class="token comment">/* \u53E6\u5916\u4E00\u79CD\u5199\u6CD5\uFF08\u63A8\u8350\uFF09 */</span>
<span class="token keyword">function</span> <span class="token function">myInstanceof</span><span class="token punctuation">(</span><span class="token parameter">checkObj<span class="token punctuation">,</span> func</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u83B7\u53D6func\u5BF9\u5E94\u7684\u539F\u578B\u5BF9\u8C61</span>
    <span class="token keyword">let</span> prototype <span class="token operator">=</span> func<span class="token punctuation">.</span>prototype<span class="token punctuation">;</span>
    <span class="token comment">// \u904D\u5386\u539F\u578B\u94FE\uFF0C\u67E5\u770B\u68C0\u6D4B\u5BF9\u8C61\u662F\u5426\u5728\u6B64\u94FE\u4E0A</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>checkObj<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>prototype<span class="token punctuation">.</span><span class="token function">isPrototypeOf</span><span class="token punctuation">(</span>checkObj<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u8BA9\u68C0\u6D4B\u5BF9\u8C61\u5F80\u94FE\u6761\u7684\u540E\u534A\u90E8\u5206\u79FB\u52A8</span>
            checkObj <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">getPrototypeOf</span><span class="token punctuation">(</span>checkObj<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br></div></div><h1 id="\u6269\u5C55\u95EE\u9898" tabindex="-1"><a class="header-anchor" href="#\u6269\u5C55\u95EE\u9898" aria-hidden="true">#</a> \u6269\u5C55\u95EE\u9898</h1><h2 id="\u68C0\u6D4B-\u5BF9\u8C61-\u4E0E-\u5BF9\u8C61" tabindex="-1"><a class="header-anchor" href="#\u68C0\u6D4B-\u5BF9\u8C61-\u4E0E-\u5BF9\u8C61" aria-hidden="true">#</a> \u68C0\u6D4B \u5BF9\u8C61 \u4E0E \u5BF9\u8C61</h2><blockquote><p>\u5982\u4F55\u5224\u65AD \u5BF9\u8C611 \u662F\u5426\u5728 \u5BF9\u8C612 \u7684\u539F\u578B\u94FE\u4E0A</p></blockquote><ul><li><code>obj1.isPrototypeOf(obj2)</code></li><li><code>Object.getPrototypeOf(obj2)</code> \u83B7\u53D6<code>obj2</code>\u5BF9\u8C61\u7684<code>[[Prototype]]</code>\u5C5E\u6027</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> obj1 <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;obj1&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">dif_property</span><span class="token operator">:</span> <span class="token string">&#39;different property&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> obj2 <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;obj2&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u5C06 obj2\u5BF9\u8C61 \u59D4\u6258\u7ED9 obj1\u5BF9\u8C61</span>
obj2<span class="token punctuation">.</span>__proto__ <span class="token operator">=</span> obj1<span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj2<span class="token punctuation">.</span>name<span class="token punctuation">,</span>obj2<span class="token punctuation">.</span>dif_property<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// obj2 different property</span>

<span class="token comment">// obj1 \u662F\u5426\u51FA\u73B0\u5728 obj2 \u7684 [[Prototype]] \u94FE\u4E2D</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj1<span class="token punctuation">.</span><span class="token function">isPrototypeOf</span><span class="token punctuation">(</span>obj2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// true</span>

<span class="token comment">// Object.getPrototypeOf(obj2) =&gt; \u83B7\u53D6 obj2 \u7684[[Prototype]]\u5C5E\u6027</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Object<span class="token punctuation">.</span><span class="token function">getPrototypeOf</span><span class="token punctuation">(</span>obj2<span class="token punctuation">)</span> <span class="token operator">==</span> obj1<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// true</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj2 <span class="token keyword">instanceof</span> <span class="token class-name">obj1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u62A5\u9519</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div>`,11);function t(o,e){return p}var l=n(a,[["render",t],["__file","JS \u2014 instanceof\u7684\u4F5C\u7528\u4E0E\u6A21\u62DF\u5B9E\u73B0.html.vue"]]);export{l as default};

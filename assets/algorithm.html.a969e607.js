import{_ as e,r as o,o as c,c as l,a as n,d as p,F as u,e as t,b as s}from"./app.fc2879aa.js";const r={},i=t(`<h1 id="\u7B97\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u7B97\u6CD5" aria-hidden="true">#</a> \u7B97\u6CD5</h1><h2 id="\u5192\u6CE1\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u5192\u6CE1\u6392\u5E8F" aria-hidden="true">#</a> \u5192\u6CE1\u6392\u5E8F</h2><blockquote><p>\u63CF\u8FF0\uFF1A\u5C31\u50CF\u6C34\u5192\u6CE1\u4E00\u6837\uFF0C\u6BCF\u5192\u6CE1\u4E00\u6B21\u5C31\u5C06\u6700\u5927\u7684\u5143\u7D20\u5192\u6CE1\u5230\u6570\u7EC4\u672B\u5C3E\uFF0C\u8FD9\u6837\u5192\u6CE1<code>len - 1</code>\u6B21\uFF0C\u5C31\u53EF\u4EE5\u5F97\u5230\u4E00\u4E2A\u6392\u5E8F\u540E\u7684\u6570\u7EC4</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">/* 
    \u5192\u6CE1\u6392\u5E8F
*/</span>
<span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token parameter">array</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u7B2C\u4E00\u5C42\u6267\u884C\u6B21\u6570</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> array<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u7B2C\u4E8C\u5C42\u8FDB\u884C\u5192\u6CE1</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> array<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>array<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&gt;</span> array<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">let</span> tmp <span class="token operator">=</span> array<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
                array<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> array<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
                array<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> tmp<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> array<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token function">foo</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// [2, 4, 5, 8, 11]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><p>\u73B0\u5728\u7B2C\u4E8C\u5C42\u7684\u5FAA\u73AF\uFF0C\u662F\u6BCF\u4E00\u6B21\u90FD\u4ECE\u7B2C\u4E00\u4E2A\u6BD4\u8F83\u5230\u6700\u540E\u4E00\u4E2A\uFF0C\u5176\u5B9E\u6211\u4EEC\u53D1\u73B0\uFF0C\u6BCF\u6B21\u6211\u4EEC\u90FD\u4F1A\u5C06\u6700\u5927\u7684\u4E00\u4E2A\u5143\u7D20\u5192\u6CE1\u5230\u6570\u7EC4\u7684\u672B\u5C3E\uFF0C\u6240\u4EE5\u53EF\u4EE5\u5728\u7B2C\u4E8C\u6B21\u5FAA\u73AF\u65F6\uFF0C\u53EA\u4ECE0\u5F00\u59CB\uFF0C\u6BD4\u8F83\u5230\u524D\u9762\u7684\u5DF2\u7ECF\u6392\u4E3A\u6700\u5927\u7684\u5143\u7D20\u7684\u524D\u9762\u5373\u53EF</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">/* 
    \u5192\u6CE1\u6392\u5E8F
*/</span>
<span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token parameter">array</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u7B2C\u4E00\u5C42\u6267\u884C\u6B21\u6570</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> array<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u7B2C\u4E8C\u5C42\u8FDB\u884C\u5192\u6CE1(\u6539\u52A8\u5C31\u662F\u8FD9\u91CC -i )</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> array<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">-</span> i<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>array<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&gt;</span> array<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">let</span> tmp <span class="token operator">=</span> array<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
                array<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> array<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
                array<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> tmp<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> array<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token function">foo</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// [2, 4, 5, 8, 11]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><h2 id="\u9009\u62E9\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u9009\u62E9\u6392\u5E8F" aria-hidden="true">#</a> \u9009\u62E9\u6392\u5E8F</h2><blockquote><p>\u63CF\u8FF0\uFF1A\u4ECE\u6570\u7EC4\u7684\u5934\u90E8\u5F00\u59CB\uFF0C\u6BD4\u8F83\u5F53\u524D\u5143\u7D20\u4E0E\u540E\u9762\u7684\u5143\u7D20\uFF0C\u5C06\u6700\u5C0F\u7684\u5143\u7D20\u6362\u7F6E\u524D\u9762\uFF0C\u8FD9\u6837\u6267\u884C<code>len - 1</code>\u6B21</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">bar</span><span class="token punctuation">(</span><span class="token parameter">array</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> len <span class="token operator">=</span> array<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u6BD4\u8F83\u5143\u7D20\u5927\u5C0F\uFF0C\u5C06\u6700\u5C0F\u7684\u5143\u7D20\u79FB\u81F3\u4E0B\u6807 i \u5904</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>array<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&gt;</span> array<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">let</span> tmp <span class="token operator">=</span> array<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
                array<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> array<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
                array<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> tmp<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> array<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token function">bar</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p>\u56E0\u4E3A\u5728\u5185\u5C42\u5FAA\u73AF\u4F1A\u9891\u7E41\u7684\u4EA4\u6362\u5143\u7D20\uFF0C\u53EF\u4EE5\u7A0D\u4F5C\u6539\u52A8\uFF0C\u8BA9\u6211\u7684\u5185\u5C42\u5FAA\u73AF\u904D\u5386\u8BB0\u5F55\u6700\u5C0F\u5143\u7D20\u7684\u4E0B\u6807\u7D22\u5F15\u5373\u53EF\uFF0C\u5185\u5C42\u5FAA\u73AF\u7ED3\u675F\u540E\uFF0C\u518D\u8FDB\u884C\u4EA4\u6362\u5143\u7D20</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">bar</span><span class="token punctuation">(</span><span class="token parameter">array</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> len <span class="token operator">=</span> array<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u8BB0\u5F55\u672C\u6B21\u904D\u5386\u5143\u7D20\u7684\u6700\u5C0F\u503C\u7D22\u5F15</span>
        <span class="token keyword">let</span> minValIndex <span class="token operator">=</span> i<span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>array<span class="token punctuation">[</span>minValIndex<span class="token punctuation">]</span> <span class="token operator">&gt;</span> array<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                minValIndex <span class="token operator">=</span> j<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u4EA4\u6362\u4E00\u6B21\u5373\u53EF</span>
      	<span class="token comment">// \u8FD9\u91CC\u8FD8\u53EF\u4EE5\u518D\u52A0\u4E2Aif\u5224\u65AD, \u5F53 minValIndex != i \u624D\u8FDB\u884C swap</span>
        <span class="token keyword">let</span> tmp <span class="token operator">=</span> array<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
        array<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> array<span class="token punctuation">[</span>minValIndex<span class="token punctuation">]</span><span class="token punctuation">;</span>
        array<span class="token punctuation">[</span>minValIndex<span class="token punctuation">]</span> <span class="token operator">=</span> tmp<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> array<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token function">bar</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><h2 id="\u63D2\u5165\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u63D2\u5165\u6392\u5E8F" aria-hidden="true">#</a> \u63D2\u5165\u6392\u5E8F</h2><blockquote><p>\u63CF\u8FF0\uFF1A\u4ECE\u672A\u6392\u5E8F\u7684\u4F4D\u7F6E\u5F00\u59CB\uFF08\u7B2C\u4E8C\u4E2A\u4F4D\u7F6E\uFF09\uFF0C\u5C06\u5F53\u524D\u5143\u7D20\u8BBE\u4E3A\u6BD4\u8F83\u503C\uFF0C\u4ECE\u4ED6\u7684\u524D\u4E00\u4E2A\u5F80\u524D\u904D\u5386\uFF0C\u5982\u679C\u524D\u9762\u7684\u5143\u7D20\u6BD4\u6BD4\u8F83\u503C\u5927\uFF0C\u5C31\u5C06\u8BE5\u5143\u7D20\u5F80\u540E\u79FB\u4E00\u4F4D\uFF0C\u6700\u540E\u627E\u5230\u6BD4\u6BD4\u8F83\u503C\u5C0F\u7684\u5143\u7D20\uFF0C\u5C06\u6BD4\u8F83\u503C\u653E\u5728\u8FD9\u4E2A\u5C0F\u7684\u5143\u7D20\u7684\u540E\u9762\u5373\u53EF\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">/* 
    \u63D2\u5165\u6392\u5E8F
*/</span>
<span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token parameter">array</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> array<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u8BB0\u5F55\u8981\u6BD4\u8F83\u7684\u503C</span>
        <span class="token keyword">let</span> compareVal <span class="token operator">=</span> array<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token comment">// \u8BB0\u5F55\u8981\u6BD4\u8F83\u503C\u7684\u524D\u4E00\u4E2A\u5143\u7D20\u4E0B\u6807\u7D22\u5F15</span>
        <span class="token keyword">let</span> j <span class="token operator">=</span> i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token comment">// \u7528 compareVal \u4F9D\u6B21\u4ECE\u4E0B\u6807 j \u6BD4\u8F83\u5230\u4E0B\u6807 0</span>
        <span class="token keyword">while</span><span class="token punctuation">(</span>j <span class="token operator">&gt;=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> array<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&gt;</span> compareVal<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u5F53\u524D\u4E0B\u6807 j \u5143\u7D20\u5982\u679C\u5927\u4E8E\u6BD4\u8F83\u503C\uFF0C\u5C31\u5C06\u4E0B\u6807 j \u5143\u7D20\u5F80\u540E\u79FB\u52A8</span>
            array<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> array<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
            j<span class="token operator">--</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u6700\u540E\u5C06\u6BD4\u8F83\u503C\u653E\u5728\u5C0F\u4E8E\u5B83\u7684\u540E\u4E00\u4F4D\u7F6E</span>
        <span class="token comment">// j \u4E0B\u6807\u6700\u540E\u8BB0\u5F55\u7684\u662F\u6BD4\u6BD4\u8F83\u503C\u5C0F\u7684\u5143\u7D20\u7684\u4E0B\u6807</span>
        array<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> compareVal<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>    
    <span class="token keyword">return</span> array<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token function">foo</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><h2 id="\u5FEB\u901F\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u5FEB\u901F\u6392\u5E8F" aria-hidden="true">#</a> \u5FEB\u901F\u6392\u5E8F</h2><blockquote><p>\uFF081\uFF09\u5728\u6570\u636E\u96C6\u4E4B\u4E2D\uFF0C\u9009\u62E9\u4E00\u4E2A\u5143\u7D20\u4F5C\u4E3A&quot;\u57FA\u51C6&quot;\uFF08pivot\uFF09\u3002</p><p>\uFF082\uFF09\u6240\u6709\u5C0F\u4E8E&quot;\u57FA\u51C6&quot;\u7684\u5143\u7D20\uFF0C\u90FD\u79FB\u5230&quot;\u57FA\u51C6&quot;\u7684\u5DE6\u8FB9\uFF1B\u6240\u6709\u5927\u4E8E&quot;\u57FA\u51C6&quot;\u7684\u5143\u7D20\uFF0C\u90FD\u79FB\u5230&quot;\u57FA\u51C6&quot;\u7684\u53F3\u8FB9\u3002</p><p>\uFF083\uFF09\u5BF9&quot;\u57FA\u51C6&quot;\u5DE6\u8FB9\u548C\u53F3\u8FB9\u7684\u4E24\u4E2A\u5B50\u96C6\uFF0C\u4E0D\u65AD\u91CD\u590D\u7B2C\u4E00\u6B65\u548C\u7B2C\u4E8C\u6B65\uFF0C\u76F4\u5230\u6240\u6709\u5B50\u96C6\u53EA\u5269\u4E0B\u4E00\u4E2A\u5143\u7D20\u4E3A\u6B62\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">/* 
    \u5FEB\u901F\u6392\u5E8F
*/</span>
<span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">quickSort</span><span class="token punctuation">(</span><span class="token parameter">array</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u7EC8\u6B62\u6761\u4EF6</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>array<span class="token punctuation">.</span>length <span class="token operator">&lt;=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">return</span> array<span class="token punctuation">;</span>

    <span class="token comment">// \u8BB0\u5F55\u57FA\u51C6\u6570 povit</span>
    <span class="token keyword">let</span> povitIndex <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>array<span class="token punctuation">.</span>length <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> povit <span class="token operator">=</span> array<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>povitIndex<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

    <span class="token comment">// \u58F0\u660E\u4E24\u4E2A\u6570\u7EC4\uFF0C\u5206\u522B\u5B58\u653E\u5C0F\u4E8E\u57FA\u51C6\u6570\u7684\u6570\u548C\u5927\u4E8E\u57FA\u51C6\u6570\u7684\u6570</span>
    <span class="token keyword">let</span> left <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        right <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

    <span class="token comment">// \u904D\u5386\u6570\u7EC4\uFF0C\u5C06\u5BF9\u5E94\u7684\u6570\u5B58\u5165\u6570\u7EC4\u4E2D</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> item <span class="token keyword">of</span> array<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>item <span class="token operator">&gt;</span> povit<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            right<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>
            left<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u518D\u9012\u5F52\u904D\u5386\u57FA\u51C6\u6570\u7684\u5DE6\u53F3\u6570\u7EC4</span>
    <span class="token keyword">return</span> <span class="token function">quickSort</span><span class="token punctuation">(</span>left<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>povit<span class="token punctuation">,</span> <span class="token function">quickSort</span><span class="token punctuation">(</span>right<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token function">quickSort</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br></div></div><h2 id="\u987A\u5E8F\u641C\u7D22" tabindex="-1"><a class="header-anchor" href="#\u987A\u5E8F\u641C\u7D22" aria-hidden="true">#</a> \u987A\u5E8F\u641C\u7D22</h2><p>\u641C\u7D22\u6548\u7387\u6700\u4F4E\u7684\u641C\u7D22</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token number">34</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">search</span><span class="token punctuation">(</span><span class="token parameter">array<span class="token punctuation">,</span> target</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> array<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>array<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> i<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">search</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// -1</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">search</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 1</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">search</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h2 id="\u4E8C\u5206\u641C\u7D22" tabindex="-1"><a class="header-anchor" href="#\u4E8C\u5206\u641C\u7D22" aria-hidden="true">#</a> \u4E8C\u5206\u641C\u7D22</h2><p>\u9996\u5148\u6570\u7EC4\u9700\u8981\u662F\u6709\u5E8F\u6570\u7EC4\uFF01\uFF01</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">/* 
    \u4E8C\u5206\u67E5\u627E\uFF1A\u9996\u5148\u6570\u7EC4\u9700\u8981\u6392\u5E8F
*/</span>
<span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token number">34</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">binarySearch</span><span class="token punctuation">(</span><span class="token parameter">array<span class="token punctuation">,</span> target</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> left <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> 
    right <span class="token operator">=</span> array<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>left <span class="token operator">&lt;=</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> mid <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token punctuation">(</span>left <span class="token operator">+</span> right<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>target <span class="token operator">&gt;</span> array<span class="token punctuation">[</span>mid<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            left <span class="token operator">=</span> mid <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>target <span class="token operator">&lt;</span> array<span class="token punctuation">[</span>mid<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            right <span class="token operator">=</span> mid <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> mid<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">binarySearch</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 1</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">binarySearch</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 4</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">binarySearch</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// -1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><h2 id="\u56DE\u6EAF\u7B97\u6CD5\u603B\u7ED3" tabindex="-1"><a class="header-anchor" href="#\u56DE\u6EAF\u7B97\u6CD5\u603B\u7ED3" aria-hidden="true">#</a> \u56DE\u6EAF\u7B97\u6CD5\u603B\u7ED3</h2><blockquote><p>\u56DE\u6EAF\u4E09\u90E8\u66F2</p></blockquote><ol><li><p>\u9012\u5F52\u51FD\u6570\u7684\u8FD4\u56DE\u503C\u4E0E\u53C2\u6570</p></li><li><p>\u56DE\u6EAF\u51FD\u6570\u7684\u7EC8\u6B62\u6761\u4EF6</p></li><li><p>\u5355\u5C42\u641C\u7D22\u7684\u8FC7\u7A0B\uFF08\u56DE\u6EAF\u6CD5\u7684\u641C\u7D22\u8FC7\u7A0B\u5C31\u662F\u4E00\u4E2A\u6811\u578B\u7ED3\u6784\u7684\u904D\u5386\u8FC7\u7A0B\uFF0Cfor\u5FAA\u73AF\u7528\u6765\u6A2A\u5411\u904D\u5386\uFF0C\u9012\u5F52\u7684\u8FC7\u7A0B\u662F\u7EB5\u5411\u904D\u5386\uFF09</p></li><li><p>\u526A\u679D</p></li></ol><blockquote><p>\u51FD\u6570\u6A21\u7248</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">void</span> <span class="token function">backtracking</span><span class="token punctuation">(</span><span class="token parameter">\u53C2\u6570</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span>\uFF08\u526A\u679D\u6761\u4EF6\uFF09<span class="token keyword">return</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>\u7EC8\u6B62\u6761\u4EF6<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        \u5B58\u653E\u7ED3\u679C<span class="token punctuation">;</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span>\u9009\u62E9\uFF1A\u672C\u5C42\u96C6\u5408\u4E2D\u5143\u7D20\uFF08\u6811\u4E2D\u8282\u70B9\u5B69\u5B50\u7684\u6570\u91CF\u5C31\u662F\u96C6\u5408\u7684\u5927\u5C0F\uFF09<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        \u5904\u7406\u8282\u70B9<span class="token punctuation">;</span>
        <span class="token function">backtracking</span><span class="token punctuation">(</span>\u8DEF\u5F84\uFF0C\u9009\u62E9\u5217\u8868<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u9012\u5F52</span>
        \u56DE\u6EAF\uFF0C\u64A4\u9500\u5904\u7406\u7ED3\u679C
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><blockquote><p><mark>\u603B\u7ED3</mark></p></blockquote><ol><li><p>\u6D89\u53CA\u5230\u526A\u53BB\u540C\u5C42\u91CD\u590D\u5143\u7D20\u65F6\uFF0C\u9700\u8981\u5148\u6392\u5E8F\u6570\u7EC4\uFF0C\u7136\u540E\u8FDB\u884C\u64CD\u4F5C\uFF01</p></li><li><p>\u5E38\u89C1\u7684\u5168\u6392\u5217\u95EE\u9898\uFF0C\u6211\u4EEC\u53EF\u4EE5\u501F\u52A9 used\uFF08\u8BB0\u5F55\u4F7F\u7528\u8FC7\u7684\u5143\u7D20\u6570\u7EC4\uFF09\u8FDB\u884C\u6C42\u89E3\uFF01</p></li></ol><h2 id="\u6DF1\u5EA6\u4F18\u5148\u641C\u7D22\u7B97\u6CD5-dfs" tabindex="-1"><a class="header-anchor" href="#\u6DF1\u5EA6\u4F18\u5148\u641C\u7D22\u7B97\u6CD5-dfs" aria-hidden="true">#</a> \u6DF1\u5EA6\u4F18\u5148\u641C\u7D22\u7B97\u6CD5\uFF08DFS\uFF09</h2><p>\u9700\u8981\u975E\u5E38\u719F\u6089\u7684\u524D\u3001\u4E2D\u3001\u540E\u5E8F\u904D\u5386\u7684\u8FC7\u7A0B</p><p>\u8FD9\u6837\u7684\u9898\uFF0C\u5F80\u5F80\u5206\u4E24\u79CD\uFF1A</p>`,33),k=n("p",null,"\u76F4\u63A5\u5728\u904D\u5386\u7684\u8FC7\u7A0B\u4E2D\u64CD\u4F5C",-1),b=s("\u4E3E\u4F8B\u5B50\uFF1A"),m={href:"https://leetcode-cn.com/problems/minimum-absolute-difference-in-bst/",target:"_blank",rel:"noopener noreferrer"},d=s("\u4E8C\u53C9\u641C\u7D22\u6811\u7684\u6700\u5C0F\u7EDD\u5BF9\u5DEE"),f=t(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>TreeNode<span class="token punctuation">}</span></span> <span class="token parameter">root</span>
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span>
 */</span>
<span class="token keyword">var</span> <span class="token function-variable function">getMinimumDifference</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">root</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u8BB0\u5F55\u6307\u5411\u524D\u4E00\u4E2A\u7ED3\u70B9\u7684\u6307\u9488</span>
    <span class="token keyword">let</span> pre <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token comment">// \u8BB0\u5F55\u6700\u5C0F\u5DEE\u503C</span>
    <span class="token keyword">let</span> minDiff <span class="token operator">=</span> <span class="token number">Infinity</span><span class="token punctuation">;</span>
    <span class="token function">dfs</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> minDiff<span class="token punctuation">;</span>

    <span class="token keyword">function</span> <span class="token function">dfs</span><span class="token punctuation">(</span><span class="token parameter">node</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>node<span class="token punctuation">)</span> <span class="token keyword">return</span> node<span class="token punctuation">;</span>

        <span class="token function">dfs</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>left<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>pre <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            pre <span class="token operator">=</span> node<span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">let</span> dif <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>val <span class="token operator">-</span> pre<span class="token punctuation">.</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>dif <span class="token operator">&lt;</span> minDiff<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                minDiff <span class="token operator">=</span> dif<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            pre <span class="token operator">=</span> node<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token function">dfs</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>right<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div>`,1),h=n("p",null,"\u9012\u5F52\u6709\u8FD4\u56DE\u503C\uFF0C\u518D\u64CD\u4F5C",-1),y=s("\u4E3E\u4F8B\u5B50\uFF1A"),w={href:"https://leetcode-cn.com/problems/er-cha-shu-de-zui-jin-gong-gong-zu-xian-lcof/",target:"_blank",rel:"noopener noreferrer"},g=s("\u4E8C\u53C9\u6811\u7684\u6700\u8FD1\u516C\u5171\u7956\u5148"),_=t(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>TreeNode<span class="token punctuation">}</span></span> <span class="token parameter">root</span>
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>TreeNode<span class="token punctuation">}</span></span> <span class="token parameter">p</span>
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>TreeNode<span class="token punctuation">}</span></span> <span class="token parameter">q</span>
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>TreeNode<span class="token punctuation">}</span></span>
 */</span>
<span class="token keyword">var</span> <span class="token function-variable function">lowestCommonAncestor</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">root<span class="token punctuation">,</span> p<span class="token punctuation">,</span> q</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>root <span class="token operator">||</span> root <span class="token operator">==</span> p <span class="token operator">||</span> root <span class="token operator">==</span> q<span class="token punctuation">)</span> <span class="token keyword">return</span> root<span class="token punctuation">;</span>
    <span class="token keyword">let</span> left <span class="token operator">=</span> <span class="token function">lowestCommonAncestor</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>left<span class="token punctuation">,</span> p<span class="token punctuation">,</span> q<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> right <span class="token operator">=</span> <span class="token function">lowestCommonAncestor</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>right<span class="token punctuation">,</span> p<span class="token punctuation">,</span> q<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>left <span class="token operator">&amp;&amp;</span> right<span class="token punctuation">)</span> <span class="token keyword">return</span> root<span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>left<span class="token punctuation">)</span> <span class="token keyword">return</span> left<span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>right<span class="token punctuation">)</span> <span class="token keyword">return</span> right<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div>`,1),v=n("h2",{id:"\u53CC\u6307\u9488\u603B\u7ED3",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u53CC\u6307\u9488\u603B\u7ED3","aria-hidden":"true"},"#"),s(" \u53CC\u6307\u9488\u603B\u7ED3")],-1),j=n("p",null,"\u5DE6\u53F3\u6307\u9488\uFF08\u4E00\u822C\u6570\u7EC4\u4E2D\u53EF\u4EE5\u4F7F\u7528\uFF0C\u5C06\u4E24\u4E2A\u6307\u9488\u5206\u522B\u7F6E\u4E8E\u6570\u7EC4\u7684\u5F00\u5934\u548C\u672B\u5C3E\uFF0C\u7136\u540E\u64CD\u4F5C\uFF09",-1),x=n("p",null,"\u4EE3\u8868\u9898\u76EE\uFF1A",-1),q={href:"https://leetcode-cn.com/problems/diao-zheng-shu-zu-shun-xu-shi-qi-shu-wei-yu-ou-shu-qian-mian-lcof/",target:"_blank",rel:"noopener noreferrer"},V=s("\u5251\u6307 Offer 21. \u8C03\u6574\u6570\u7EC4\u987A\u5E8F\u4F7F\u5947\u6570\u4F4D\u4E8E\u5076\u6570\u524D\u9762"),I={href:"https://leetcode-cn.com/problems/he-wei-sde-liang-ge-shu-zi-lcof/",target:"_blank",rel:"noopener noreferrer"},N=s("\u5251\u6307 Offer 57. \u548C\u4E3As\u7684\u4E24\u4E2A\u6570\u5B57"),S={href:"https://leetcode-cn.com/problems/reorder-list/",target:"_blank",rel:"noopener noreferrer"},D=s("143. \u91CD\u6392\u94FE\u8868"),T=s("\uFF08\u8FD9\u9898\u5C31\u662F\u5148\u628A\u94FE\u8868\u5B58\u4E3A\u6570\u7EC4\uFF0C\u7136\u540E\u5DE6\u53F3\u6307\u9488\uFF09"),z=n("p",null,"\u5FEB\u6162\u6307\u9488\uFF08\u5206\u4E24\u79CD\uFF09",-1),C=n("p",null,"\u4E00\u79CD\u662Fslow\u8DD1\u7684\u6162\uFF08\u4E00\u6B21\u8D70\u4E00\u6B65\uFF09\uFF0Cfast\u8DD1\u7684\u5FEB\uFF08\u4E00\u6B21\u8D70\u4E24\u6B65\uFF09",-1),M=n("ul",null,[n("li",null,[s("\u4E00\u822C\u5728\u6D89\u53CA"),n("mark",null,"\u73AF\u5F62"),s("\u7684\u9898\u76EE\u65F6\uFF0C\u4F1A\u7528\u5230")])],-1),A=n("p",null,"\u4E3E\u4F8B\u5B50\uFF1A",-1),B={href:"https://leetcode-cn.com/problems/linked-list-cycle/",target:"_blank",rel:"noopener noreferrer"},E=s("141. \u73AF\u5F62\u94FE\u8868"),F={href:"https://leetcode-cn.com/problems/linked-list-cycle-ii/",target:"_blank",rel:"noopener noreferrer"},O=s("142. \u73AF\u5F62\u94FE\u8868 II"),L=n("p",null,"\u4E00\u79CD\u662Ffast\u5148\u8DD1\u51E0\u6B65\uFF0C\u7136\u540E\u540C\u65F6\u8D70",-1),G=n("ul",null,[n("li",null,"\u4E00\u822C\u5728\u5BFB\u5728\u5012\u6570\u7684\u8282\u70B9\u65F6\u53EF\u7528")],-1),H=s("\u4E3E\u4F8B\u5B50\uFF1A"),J={href:"https://leetcode-cn.com/problems/remove-nth-node-from-end-of-list/",target:"_blank",rel:"noopener noreferrer"},K=s("19. \u5220\u9664\u94FE\u8868\u7684\u5012\u6570\u7B2C N \u4E2A\u7ED3\u70B9"),P=n("p",null,"\u9762\u5BF9\u94FE\u8868\u7684\u9898\u578B\u65F6\uFF0C\u5982\u679C\u6D89\u53CA\u7684\u60F3\u6CD5\u5F88\u63A5\u8FD1\u4F46\u662F\u6709\u6F0F\u6D1E\u65F6\uFF0C\u4E0D\u59A8\u8003\u8651\u4E0B\u662F\u5426\u9700\u8981\u4E00\u4E2A\u865A\u62DF\u8282\u70B9",-1),Q=n("p",null,"\u4E3E\u4F8B\u6D89\u53CA\u865A\u62DF\u8282\u70B9\u7684\u9898\u76EE\uFF1A",-1),R={href:"https://leetcode-cn.com/problems/he-bing-liang-ge-pai-xu-de-lian-biao-lcof/",target:"_blank",rel:"noopener noreferrer"},U=s("\u5251\u6307 Offer 25. \u5408\u5E76\u4E24\u4E2A\u6392\u5E8F\u7684\u94FE\u8868"),W={href:"https://leetcode-cn.com/problems/remove-nth-node-from-end-of-list/",target:"_blank",rel:"noopener noreferrer"},X=s("19. \u5220\u9664\u94FE\u8868\u7684\u5012\u6570\u7B2C N \u4E2A\u7ED3\u70B9"),Y={href:"https://leetcode-cn.com/problems/partition-list/",target:"_blank",rel:"noopener noreferrer"},Z=s("86. \u5206\u9694\u94FE\u8868");function $(nn,sn){const a=o("ExternalLinkIcon");return c(),l(u,null,[i,n("ol",null,[n("li",null,[k,n("p",null,[b,n("a",m,[d,p(a)])]),f]),n("li",null,[h,n("p",null,[y,n("a",w,[g,p(a)])]),_])]),v,n("ol",null,[n("li",null,[j,x,n("ul",null,[n("li",null,[n("p",null,[n("a",q,[V,p(a)])])]),n("li",null,[n("p",null,[n("a",I,[N,p(a)])])]),n("li",null,[n("p",null,[n("a",S,[D,p(a)]),T])])])]),n("li",null,[z,n("ul",null,[n("li",null,[C,M,A,n("ol",null,[n("li",null,[n("p",null,[n("a",B,[E,p(a)])])]),n("li",null,[n("p",null,[n("a",F,[O,p(a)])])])])]),n("li",null,[L,G,n("p",null,[H,n("a",J,[K,p(a)])])])])]),n("li",null,[P,Q,n("ol",null,[n("li",null,[n("p",null,[n("a",R,[U,p(a)])])]),n("li",null,[n("p",null,[n("a",W,[X,p(a)])])]),n("li",null,[n("p",null,[n("a",Y,[Z,p(a)])])])])])])],64)}var pn=e(r,[["render",$],["__file","algorithm.html.vue"]]);export{pn as default};

import{_ as n,e as s}from"./app.fc2879aa.js";const a={},p=s(`<h1 id="typeof\u548Cinstanceof" tabindex="-1"><a class="header-anchor" href="#typeof\u548Cinstanceof" aria-hidden="true">#</a> typeof\u548Cinstanceof</h1><h2 id="typeof" tabindex="-1"><a class="header-anchor" href="#typeof" aria-hidden="true">#</a> typeof</h2><p>\u200B <code>typeof</code>\u64CD\u4F5C\u7B26\u7528\u4E8E\u8FD4\u56DE\u6B63\u5728\u4F7F\u7528\u503C\u7684\u7C7B\u578B\u3002</p><h2 id="instanceof" tabindex="-1"><a class="header-anchor" href="#instanceof" aria-hidden="true">#</a> instanceof</h2><p>\u200B \u901A\u8FC7\u4F7F\u7528<code>instanceof</code>\u64CD\u4F5C\u7B26\uFF0C\u53EF\u4EE5\u786E\u5B9A\u4E00\u4E2A<strong>\u5BF9\u8C61</strong>\u662F\u5426\u662F\u7279\u5B9A<strong>\u6784\u9020\u51FD\u6570</strong>\u7684<strong>\u5B9E\u4F8B</strong>\uFF0C\u8FD4\u56DE<code>true</code>\u6216<code>false</code>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">father</span><span class="token punctuation">{</span>

    <span class="token punctuation">}</span> 
<span class="token keyword">class</span> <span class="token class-name">sons</span> <span class="token keyword">extends</span> <span class="token class-name">father</span><span class="token punctuation">{</span>

    <span class="token punctuation">}</span>
<span class="token keyword">var</span> son1<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">sons</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>son1 <span class="token keyword">instanceof</span> <span class="token class-name">father</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//true</span>

<span class="token keyword">function</span> <span class="token function">fa</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>

    <span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">son</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>

    <span class="token punctuation">}</span>
son<span class="token punctuation">.</span>prototype<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">fa</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> s1<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">son</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>s1 <span class="token keyword">instanceof</span> <span class="token class-name">fa</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//ture</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p>\u4F7F\u7528 <code>obj instanceOf Class</code> \u68C0\u67E5 <code>Class.prototype</code> \u662F\u5426\u7B49\u4E8E <code>obj</code> \u7684\u539F\u578B\u94FE\u4E2D\u7684\u539F\u578B\u4E4B\u4E00\u3002</p><p>\u6362\u53E5\u8BDD\u8BF4\u5C31\u662F\uFF0C\u4E00\u4E2A\u63A5\u4E00\u4E2A\u5730\u6BD4\u8F83\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>obj<span class="token punctuation">.</span>__proto__ <span class="token operator">===</span> <span class="token class-name">Class</span><span class="token punctuation">.</span>prototype<span class="token operator">?</span> 
obj<span class="token punctuation">.</span>__proto__<span class="token punctuation">.</span>__proto__ <span class="token operator">===</span> <span class="token class-name">Class</span><span class="token punctuation">.</span>prototype<span class="token operator">?</span> 
obj<span class="token punctuation">.</span>__proto__<span class="token punctuation">.</span>__proto__<span class="token punctuation">.</span>__proto__ <span class="token operator">===</span> <span class="token class-name">Class</span><span class="token punctuation">.</span>prototype<span class="token operator">?</span> <span class="token operator">...</span> <span class="token comment">// \u5982\u679C\u4EFB\u610F\u4E00\u4E2A\u7684\u7B54\u6848\u4E3A true\uFF0C\u5219\u8FD4\u56DE true // \u5426\u5219\uFF0C\u5982\u679C\u6211\u4EEC\u5DF2\u7ECF\u68C0\u67E5\u5230\u4E86\u539F\u578B\u94FE\u7684\u5C3E\u7AEF\uFF0C\u5219\u8FD4\u56DE false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u4F8B\u5B50\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> a<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>__proto__<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a <span class="token keyword">instanceof</span> <span class="token class-name">Array</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h1 id="in\u548Chasownproperty" tabindex="-1"><a class="header-anchor" href="#in\u548Chasownproperty" aria-hidden="true">#</a> in\u548ChasOwnProperty</h1><h2 id="in" tabindex="-1"><a class="header-anchor" href="#in" aria-hidden="true">#</a> in</h2><p><code>in</code>\u64CD\u4F5C\u7B26\u53EF\u4EE5\u68C0\u67E5\u4E00\u4E2A\u5BF9\u8C61\u7684\u5C5E\u6027\uFF0C\u5305\u62EC\u6765\u81EA\u539F\u578B\u94FE\u7684\u5C5E\u6027</p><p>\u8BED\u6CD5\uFF1A<code>&quot;key&quot; in object</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> user <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;asda&#39;</span><span class="token punctuation">,</span><span class="token literal-property property">age</span><span class="token operator">:</span><span class="token number">123</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token comment">//age\u662F\u81EA\u5DF1\u7684\u5C5E\u6027\uFF0CtoString\u662F\u5B83\u4ECE\u539F\u578B\u94FE\u4E0A\u7EE7\u627F\u4E0B\u6765\u7684\u5C5E\u6027</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;name&#39;</span> <span class="token keyword">in</span> user<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;toString&#39;</span> <span class="token keyword">in</span> user<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;name&#39;</span> <span class="token keyword">in</span> Object<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;age&#39;</span> <span class="token keyword">in</span> Object<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//false</span>
<span class="token comment">// \u4E3A\u4EC0\u4E48\u8FD9\u91CC\u7684name\u662Ftrue,age\u662Ffalse\uFF0C\u56E0\u4E3AObject\u4E2D\u81EA\u5DF1\u6709name\u5C5E\u6027\uFF0C\u800C\u6CA1\u6709age\u5C5E\u6027</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Object<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Object<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span><span class="token string">&#39;age&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="\u6CE8\u610F" tabindex="-1"><a class="header-anchor" href="#\u6CE8\u610F" aria-hidden="true">#</a> \u6CE8\u610F</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">2</span> <span class="token keyword">in</span> arr<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">4</span> <span class="token keyword">in</span> arr<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><strong>\u5982\u679Cin\u64CD\u4F5C\u7B26\u53F3\u8FB9\u662FArray\uFF0C\u5224\u65AD\u7684\u662F\u5176\u503C\u662F\u5426\u4E3A\u6570\u7EC4\u4E0B\u6807\u4E4B\u4E00\uFF0C\u800C\u975E\u6570\u7EC4\u5143\u7D20</strong></p><h2 id="hasownproperty" tabindex="-1"><a class="header-anchor" href="#hasownproperty" aria-hidden="true">#</a> hasOwnProperty</h2><p>\u5224\u65AD\u662F\u5426\u4E3A\u81EA\u8EAB\u7684\u5C5E\u6027\uFF0C\u4E0D\u662F\u539F\u578B\u7684\u5C5E\u6027</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">obj0</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&#39;vx&#39;</span><span class="token punctuation">,</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token string">&#39;18&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
obj0<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>gender <span class="token operator">=</span> <span class="token string">&#39;male&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> obj1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">obj0</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u6253\u5370\u6240\u6709\u53EF\u679A\u4E3E\u5C5E\u6027</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token keyword">in</span> obj1<span class="token punctuation">)</span> <span class="token punctuation">{</span>
 console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// name age gender \u4ECE\u539F\u578B\u94FE\u4E0A\u7EE7\u627F\u4E0B\u6765\u7684\u5C5E\u6027\u4E5F\u4F1A\u88AB\u6253\u5370\u51FA\u6765</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u8FC7\u6EE4\u6389\u539F\u578B\u94FE\u4E0A\u7684\u5C5E\u6027</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token keyword">in</span> obj1<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>obj1<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// name age</span>
     <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h1 id="object-keys\u548Cobject-getownpropertynames" tabindex="-1"><a class="header-anchor" href="#object-keys\u548Cobject-getownpropertynames" aria-hidden="true">#</a> Object.keys\u548CObject.getOwnPropertyNames</h1><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> person <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;leo&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">20</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// hobby\u5C5E\u6027\u8BBE\u7F6E\u4E0D\u53EF\u679A\u4E3E</span>
Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>person<span class="token punctuation">,</span> <span class="token string">&#39;hobby&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&#39;play the basketball&#39;</span><span class="token punctuation">,</span>
  <span class="token comment">// \u8BBE\u7F6E\u679A\u4E3E\u5C5E\u6027</span>
  <span class="token literal-property property">enumerable</span><span class="token operator">:</span> <span class="token boolean">false</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// \u8BBE\u7F6E\u5171\u4EAB\u5C5E\u6027 together_var</span>
<span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>together_var <span class="token operator">=</span> <span class="token string">&#39;common var&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> res_keys <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>person<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> res_getOwnPropertyName <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">getOwnPropertyNames</span><span class="token punctuation">(</span>person<span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res_keys<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// [&quot;name&quot;, &quot;age&quot;]</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res_getOwnPropertyName<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// [&quot;name&quot;, &quot;age&quot;, &quot;hobby&quot;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><p><strong>Object.getOwnPropertyNames\u8FD4\u56DE\u7684\u6570\u7EC4\u4E2D\u5305\u542B\u4E0D\u53EF\u679A\u4E3E\u7684\u5C5E\u6027\uFF01</strong></p>`,25);function t(e,o){return p}var l=n(a,[["render",t],["__file","JS \u2014 typeof\u3001instanceof \u548C in\u3001hasOwnProperty\u7684\u533A\u522B\u53CA\u4F5C\u7528.html.vue"]]);export{l as default};

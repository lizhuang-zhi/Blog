import{_ as n,e as s}from"./app.fc2879aa.js";const a={},p=s(`<h1 id="\u57FA\u672C\u5F15\u7528\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u57FA\u672C\u5F15\u7528\u7C7B\u578B" aria-hidden="true">#</a> \u57FA\u672C\u5F15\u7528\u7C7B\u578B</h1><h2 id="date" tabindex="-1"><a class="header-anchor" href="#date" aria-hidden="true">#</a> Date</h2><blockquote><p>\u4F7F\u7528 Date\u6784\u9020\u51FD\u6570 \u4E0E Date.parse()</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> time_stamp <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">&#39;2021-2-5&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> time <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token number">1612454400000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> time_2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">&#39;2021-1-5&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>time_stamp<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 1612454400000</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>time<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// Fri Feb 05 2021 00:00:00 GMT+0800 (\u4E2D\u56FD\u6807\u51C6\u65F6\u95F4)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>time_2<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// Tue Jan 05 2021 00:00:00 GMT+0800 (\u4E2D\u56FD\u6807\u51C6\u65F6\u95F4)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><blockquote><p>\u901A\u8FC7 Date.now() \u65B9\u6CD5\u5206\u6790\u4EE3\u7801\u6267\u884C\u65F6\u957F</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> start <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> n <span class="token operator">=</span> <span class="token number">0</span>
  <span class="token keyword">while</span><span class="token punctuation">(</span>n<span class="token operator">++</span> <span class="token operator">&lt;</span> <span class="token number">220</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u6267\u884C\u51FD\u6570-1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token function">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> end <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>end <span class="token operator">-</span> start<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 9(ms)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="\u65E5\u671F\u683C\u5F0F\u5316\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u65E5\u671F\u683C\u5F0F\u5316\u65B9\u6CD5" aria-hidden="true">#</a> \u65E5\u671F\u683C\u5F0F\u5316\u65B9\u6CD5</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> time <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">&#39;2020-2-2&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// Sun Feb 02 2020 00:00:00 GMT+0800 (\u4E2D\u56FD\u6807\u51C6\u65F6\u95F4)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span><span class="token function">toLocaleString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 2020/2/2\u4E0A\u534812:00:00</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span><span class="token function">toUTCString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// Sat, 01 Feb 2020 16:00:00 GMT</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span><span class="token function">toTimeString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 00:00:00 GMT+0800 (\u4E2D\u56FD\u6807\u51C6\u65F6\u95F4)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span><span class="token function">toDateString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// Sun Feb 02 2020</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span><span class="token function">toLocaleTimeString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u4E0A\u534812:00:00</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span><span class="token function">toLocaleDateString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 2020/2/2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h3 id="\u65E5\u671F\u65F6\u95F4\u7EC4\u4EF6\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u65E5\u671F\u65F6\u95F4\u7EC4\u4EF6\u65B9\u6CD5" aria-hidden="true">#</a> \u65E5\u671F\u65F6\u95F4\u7EC4\u4EF6\u65B9\u6CD5</h3><p>\u5177\u4F53\u5185\u5BB9\u53EF\u67E5\u9605\u300AJS\u9AD8\u7EA7\u7A0B\u5E8F\u8BBE\u8BA1\u300B\u7684\u7B2C107\u9875</p><h2 id="\u539F\u59CB\u503C\u5305\u88C5\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u539F\u59CB\u503C\u5305\u88C5\u7C7B\u578B" aria-hidden="true">#</a> \u539F\u59CB\u503C\u5305\u88C5\u7C7B\u578B</h2><h3 id="\u5C01\u88C5\u5BF9\u8C61" tabindex="-1"><a class="header-anchor" href="#\u5C01\u88C5\u5BF9\u8C61" aria-hidden="true">#</a> \u5C01\u88C5\u5BF9\u8C61</h3><blockquote><p>\u5C01\u88C5\u5BF9\u8C61\u4E0E\u539F\u59CB\u503C\u7684\u533A\u522B</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">/* 
 \u5C01\u88C5\u5BF9\u8C61\u4E0E\u539F\u59CB\u503C\u7684\u533A\u522B
*/</span>
<span class="token keyword">let</span> s_obj <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span><span class="token string">&#39;String Obj&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token string">&#39;just String&#39;</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>s_obj<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">// String {&quot;String Obj&quot;}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// just String</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> s_obj<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">// object</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> str<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// string</span>

<span class="token comment">/* 
  js\u5F15\u64CE\u4F1A\u81EA\u52A8\u5C06\u57FA\u672C\u7C7B\u578B\u5305\u88C5\u4E3A\u4E00\u4E2A\u5C01\u88C5\u5BF9\u8C61
*/</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 11</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// JUST STRING</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><blockquote><p>\u8BA4\u8BC6\u5C01\u88C5\u5BF9\u8C61\u6D41\u7A0B</p></blockquote><p>\u901A\u8FC7\u4E00\u6BB5\u4EE3\u7801</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token string">&#39;Mr.KLeo&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> str_2 <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str_2<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// Mr.KLeo</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u8FD9\u91CC\u7684\u53D8\u91CFstr\u662F\u4E00\u4E2A\u539F\u59CB\u503C\uFF0C\u7406\u8BBA\u4E0A\u662F\u4E0D\u80FD\u591F\u8C03\u7528\u65B9\u6CD5\u7684\u3002\u4F46\u662F\u8FD9\u4E2A\u4F8B\u5B50\u53C8\u53EF\u4EE5\u6309\u7167\u9884\u671F\u8FD0\u884C\u3002\u8FD9\u662F\u56E0\u4E3A\u540E\u53F0\u505A\u4E86\u5F88\u591A\u5904\u7406\u6765\u5B9E\u73B0\u8FD9\u4E2A\u64CD\u4F5C\uFF1B\u5177\u4F53\u6765\u8BF4\u7B2C\u4E8C\u884C\u8BBF\u95EEstr\u7684\u65F6\u5019\u662F\u901A\u8FC7\u8BFB\u7684\u6A21\u5F0F\u6765\u8BBF\u95EE\u7684\uFF0C\u5177\u4F53\u6B65\u9AA4\uFF1A</p><ol><li>\u521B\u5EFA\u4E00\u4E2AString\u7C7B\u578B\u7684\u5B9E\u4F8B</li><li>\u8C03\u7528\u5B9E\u4F8B\u4E0A\u7684\u65B9\u6CD5</li><li>\u9500\u6BC1\u5B9E\u4F8B</li></ol><p>\u901A\u8FC7\u4EE3\u7801\u6765\u6F14\u793A\u4E0A\u9762\u7684\u6B65\u9AA4\u5C31\u662F</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span><span class="token string">&#39;Mr.KLeo&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> str_2 <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
str <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><strong>\u5728\u7B2C\u4E8C\u884C\u4EE3\u7801\u8FD0\u884C\u65F6\uFF08\u7B2C\u4E00\u6BB5\u4EE3\u7801\uFF09\uFF0C\u4F1A\u4E34\u65F6\u521B\u5EFA\u4E00\u4E2AString\u5BF9\u8C61\uFF0C\u7136\u540E\u5230\u7B2C\u4E09\u884C\u4EE3\u7801\u8FD0\u884C\u65F6\uFF0C\u8FD9\u4E2A\u5BF9\u8C61\u5C31\u5DF2\u7ECF\u88AB\u9500\u6BC1\uFF01</strong></p><h3 id="\u6784\u9020\u51FD\u6570\u4E0E\u8F6C\u578B\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u6784\u9020\u51FD\u6570\u4E0E\u8F6C\u578B\u51FD\u6570" aria-hidden="true">#</a> \u6784\u9020\u51FD\u6570\u4E0E\u8F6C\u578B\u51FD\u6570</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token string">&#39;str&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> pack_str <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u6784\u9020\u51FD\u6570</span>
<span class="token keyword">let</span> func_str <span class="token operator">=</span> <span class="token function">String</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u8F6C\u578B\u51FD\u6570</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// str</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> str<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// string</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>pack_str<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// String {&quot;str&quot;} </span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> pack_str<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// object</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>func_str<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// str</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> func_str<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// string</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>\u901A\u8FC7==\u8F6C\u578B\u51FD\u6570==\u83B7\u5F97\u7684\u662F\u4E00\u4E2A==\u539F\u59CB\u503C==\uFF0C\u800C\u901A\u8FC7 ==new \u6784\u9020\u51FD\u6570==\u83B7\u5F97\u7684\u662F\u4E00\u4E2A==\u5B9E\u4F8B\u5BF9\u8C61==</p><h3 id="array" tabindex="-1"><a class="header-anchor" href="#array" aria-hidden="true">#</a> Array</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// [empty \xD7 3]</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// undefined</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// undefined</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// undefined</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u5F53\u4F7F\u7528<code>new Array()</code>\u53EA\u4F20\u5165\u4E00\u4E2A\u53C2\u6570\u65F6\uFF0C\u751F\u6210\u957F\u5EA6\u4E3A\u6B64\u53C2\u6570\u7684\u4E00\u4E2A\u7A7A\u6570\u7EC4</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> b <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token keyword">undefined</span><span class="token punctuation">,</span><span class="token keyword">undefined</span><span class="token punctuation">,</span><span class="token keyword">undefined</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> c <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
c<span class="token punctuation">.</span>length <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// [empty \xD7 3]</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// [undefined, undefined, undefined]</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// [empty \xD7 3]</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;-&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// --</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;-&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// --</span>

<span class="token keyword">let</span> res_a <span class="token operator">=</span> a<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">val<span class="token punctuation">,</span>index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> index<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">let</span> res_b <span class="token operator">=</span> b<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">val<span class="token punctuation">,</span>index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> index<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res_a<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// [empty \xD7 3]</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res_b<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// [0, 1, 2]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><h3 id="boolean" tabindex="-1"><a class="header-anchor" href="#boolean" aria-hidden="true">#</a> Boolean</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> boolean <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Boolean</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u6784\u9020\u51FD\u6570</span>
<span class="token keyword">let</span> boolean_2 <span class="token operator">=</span> <span class="token function">Boolean</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u8F6C\u578B\u51FD\u6570</span>
<span class="token keyword">let</span> boolean_3 <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>  <span class="token comment">// \u539F\u59CB\u503C</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>boolean<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// Boolean {false}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>boolean_2<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// false</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>boolean_3<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// false</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> boolean<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// Object</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> boolean_2<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// boolean</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> boolean_3<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// boolean</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p><strong>\u5EFA\u8BAE\u6C38\u8FDC\u4E0D\u8981\u4F7F\u7528Boolean\u5BF9\u8C61</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> booleanObject <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Boolean</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> res <span class="token operator">=</span> booleanObject <span class="token operator">&amp;&amp;</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token comment">/* 
  \u56E0\u4E3A\u6240\u6709\u5BF9\u8C61\u5728\u5E03\u5C14\u8868\u8FBE\u5F0F\u4E2D\u90FD\u4F1A\u81EA\u52A8\u8F6C\u5316\u4E3Atrue
*/</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="symbol" tabindex="-1"><a class="header-anchor" href="#symbol" aria-hidden="true">#</a> Symbol</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> symbol <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&#39;SymbolValue&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span>symbol<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token string">&#39;val&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// {Symbol(SymbolValue): &quot;val&quot;}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>symbol<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// Symbol(SymbolValue)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>symbol<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// Symbol(SymbolValue)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> symbol<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// symbol</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div>`,35);function t(o,e){return p}var l=n(a,[["render",t],["__file","JS \u2014 \u57FA\u672C\u5F15\u7528\u7C7B\u578B.html.vue"]]);export{l as default};
